<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>GetZoomCallAsync</name>
        <label>GetZoomCall</label>
        <locationX>578</locationX>
        <locationY>384</locationY>
        <actionName>GetZoomCall.getV2MeetingsRecordingsByUuid</actionName>
        <actionType>externalService</actionType>
        <connector>
            <targetReference>Is_Call_Found</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>uuid</name>
            <value>
                <elementReference>ZoomMeetingId</elementReference>
            </value>
        </inputParameters>
        <outputParameters>
            <assignToReference>CallDetailsAsync</assignToReference>
            <name>200</name>
        </outputParameters>
    </actionCalls>
    <apiVersion>58.0</apiVersion>
    <decisions>
        <name>Is_Call_Found</name>
        <label>Is Call Found?</label>
        <locationX>578</locationX>
        <locationY>492</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Call_Found_Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CallDetailsAsync</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Set_Recording_URL</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>If Zoom meeting then we need to extract shareable link and transcript</description>
        <name>Is_Zoom_Meeting</name>
        <label>Is Zoom Meeting</label>
        <locationX>776</locationX>
        <locationY>276</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Is_Zoom_Meeting_Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IsZoomMeetingURL</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetZoomCallAsync</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <description>If Zoom meeting then we need to extract shareable link and transcript</description>
        <name>Is_Zoom_Meeting_Sync</name>
        <label>Is Zoom Meeting</label>
        <locationX>50</locationX>
        <locationY>276</locationY>
        <defaultConnector>
            <targetReference>Copy_Recording_URL</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_Is_ZoomMeetingURLSync</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IsZoomMeetingURL</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>For Zoom calls logged with the meeting ID in the Proof Of Work URL, the flow extracts the sharable video link by contacting Zoom API and sets it to the Call Recording URL field, for Twilio calls it copies the link as is.

30/08/2023 LAMBDA-64763 enable Automation Setting in entry criteria</description>
    <formulas>
        <name>IsTwilioMeetingURL</name>
        <dataType>Boolean</dataType>
        <expression>BEGINS({!$Record.Proof_Of_Work_URL__c}, &quot;https://api.twilio.com/&quot;)</expression>
    </formulas>
    <formulas>
        <name>IsZoomMeetingURL</name>
        <dataType>Boolean</dataType>
        <expression>BEGINS({!$Record.Proof_Of_Work_URL__c}, &quot;https://crossover.zoom.us/recording/detail?meeting_id=&quot;) || BEGINS({!$Record.Proof_Of_Work_URL__c}, &quot;https://zoom.us/recording/detail?meeting_id=&quot;)</expression>
    </formulas>
    <formulas>
        <description>Get Zoom Meeting Id</description>
        <name>ZoomMeetingId</name>
        <dataType>String</dataType>
        <expression>SUBSTITUTE({!$Record.Proof_Of_Work_URL__c}, LEFT({!$Record.Proof_Of_Work_URL__c}, FIND(&quot;meeting_id=&quot;, {!$Record.Proof_Of_Work_URL__c})+10), &quot;&quot;)</expression>
    </formulas>
    <interviewLabel>On Call Logged - Set Recording URL {!$Flow.CurrentDateTime}</interviewLabel>
    <label>On Call Logged - Set Recording URL</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordUpdates>
        <name>Copy_Recording_URL</name>
        <label>Copy Recording URL</label>
        <locationX>182</locationX>
        <locationY>384</locationY>
        <inputAssignments>
            <field>Call_Recording_URL__c</field>
            <value>
                <elementReference>$Record.Proof_Of_Work_URL__c</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Set_Recording_URL</name>
        <label>Set Recording URL</label>
        <locationX>446</locationX>
        <locationY>600</locationY>
        <inputAssignments>
            <field>Call_Recording_URL__c</field>
            <value>
                <elementReference>CallDetailsAsync.sharex5furl</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>287</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Is_Zoom_Meeting_Sync</targetReference>
        </connector>
        <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
        <object>Task</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <scheduledPaths>
            <connector>
                <targetReference>Is_Zoom_Meeting</targetReference>
            </connector>
            <pathType>AsyncAfterCommit</pathType>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <triggerOrder>1300</triggerOrder>
    <variables>
        <name>CallDetailsAsync</name>
        <apexClass>ExternalService__GetZoomCall_MeetingRecordingsResponse</apexClass>
        <dataType>Apex</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
