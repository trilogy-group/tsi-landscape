 {
  "tray_export_version": 4,
  "export_type": "workflow",
  "workflows": [
    {
      "id": "0d6911b1-ed7c-47cd-957a-3b189e7f8696",
      "created": "2022-10-27T05:37:18.702178Z",
      "workspace_id": "d3800da2-85c2-4b09-83cb-f805e217d38a",
      "group": "10be1bfc-ae0b-4837-9ca1-b9b50146b896",
      "creator": "5fded9ad-cf9a-43e3-9b08-28bde8b87d6e",
      "version": {
        "id": "10ab64c0-ec10-4373-9560-c67a56413551",
        "created": "2023-11-27T03:55:57.330851Z"
      },
      "title": "Convert a SF Quote to a NS Subscription",
      "enabled": true,
      "tags": [],
      "settings": {
        "config": {
          "restlet": "script=customscript_si_main_main_restlet&deploy=customdeploy_si_main_main"
        },
        "alerting_workflow_id": "5b94881f-4352-4ac4-8ee9-ffe85036bfca",
        "input_schema": {
          "type": "object",
          "properties": {
            "opportunityId": {
              "title": "Quote Id",
              "type": "string",
              "description": "Salesforce Identifier for the Quote to be converted to a Netsuite subscription"
            }
          },
          "additionalProperties": false,
          "required": [],
          "advanced": []
        },
        "output_schema": {
          "type": "object",
          "properties": {
            "subscription": {
              "type": "string",
              "title": "Subscription Id",
              "description": "Identifier of the created subscription"
            },
            "message": {
              "title": "Message",
              "type": "string",
              "description": "Description of the result"
            },
            "WasSyncEnabled": {
              "title": "Was Sync Enabled",
              "type": "boolean",
              "default": false
            },
            "sfPartnerId": {
              "title": "Salesforce Partner Id",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": [],
          "advanced": []
        }
      },
      "steps_structure": [
        {
          "name": "trigger",
          "type": "normal",
          "content": {}
        },
        {
          "name": "salesforce-1",
          "type": "normal",
          "content": {}
        },
        {
          "name": "storage-5",
          "type": "normal",
          "content": {}
        },
        {
          "name": "boolean-condition-8",
          "type": "branch",
          "content": {
            "true": [],
            "false": [
              {
                "name": "callable-workflow-response-4",
                "type": "normal",
                "content": {}
              }
            ]
          }
        },
        {
          "name": "boolean-condition-9",
          "type": "branch",
          "content": {
            "true": [],
            "false": [
              {
                "name": "terminate-3",
                "type": "normal",
                "content": {}
              }
            ]
          }
        },
        {
          "name": "salesforce-2",
          "type": "normal",
          "content": {}
        },
        {
          "name": "loop-2",
          "type": "loop",
          "content": {
            "_loop": [
              {
                "name": "script-19",
                "type": "normal",
                "content": {}
              },
              {
                "name": "boolean-condition-3",
                "type": "branch",
                "content": {
                  "true": [
                    {
                      "name": "netsuite-5",
                      "type": "normal",
                      "content": {}
                    },
                    {
                      "name": "script-6",
                      "type": "normal",
                      "content": {}
                    },
                    {
                      "name": "script-3",
                      "type": "normal",
                      "content": {}
                    },
                    {
                      "name": "break-loop-1",
                      "type": "break",
                      "content": {},
                      "target": "loop-2"
                    }
                  ],
                  "false": []
                }
              }
            ]
          }
        },
        {
          "name": "data-mapper-1",
          "type": "normal",
          "content": {}
        },
        {
          "name": "script-1",
          "type": "normal",
          "content": {}
        },
        {
          "name": "netsuite-4",
          "type": "normal",
          "content": {}
        },
        {
          "name": "boolean-condition-2",
          "type": "branch",
          "content": {
            "true": [
              {
                "name": "terminate-4",
                "type": "normal",
                "content": {}
              }
            ],
            "false": []
          }
        },
        {
          "name": "loop-5",
          "type": "loop",
          "content": {
            "_loop": [
              {
                "name": "netsuite-10",
                "type": "normal",
                "content": {}
              },
              {
                "name": "storage-8",
                "type": "normal",
                "content": {}
              }
            ]
          }
        },
        {
          "name": "script-13",
          "type": "normal",
          "content": {}
        },
        {
          "name": "loop-1",
          "type": "loop",
          "content": {
            "_loop": [
              {
                "name": "storage-4",
                "type": "normal",
                "content": {}
              },
              {
                "name": "boolean-condition-1",
                "type": "branch",
                "content": {
                  "true": [
                    {
                      "name": "script-11",
                      "type": "normal",
                      "content": {}
                    },
                    {
                      "name": "storage-1",
                      "type": "normal",
                      "content": {}
                    },
                    {
                      "name": "storage-2",
                      "type": "normal",
                      "content": {}
                    }
                  ],
                  "false": [
                    {
                      "name": "boolean-condition-11",
                      "type": "branch",
                      "content": {
                        "true": [
                          {
                            "name": "script-15",
                            "type": "normal",
                            "content": {}
                          },
                          {
                            "name": "storage-11",
                            "type": "normal",
                            "content": {}
                          },
                          {
                            "name": "storage-12",
                            "type": "normal",
                            "content": {}
                          }
                        ],
                        "false": []
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "storage-3",
          "type": "normal",
          "content": {}
        },
        {
          "name": "storage-6",
          "type": "normal",
          "content": {}
        },
        {
          "name": "salesforce-7",
          "type": "normal",
          "content": {}
        },
        {
          "name": "script-4",
          "type": "normal",
          "content": {}
        },
        {
          "name": "call-workflow-3",
          "type": "normal",
          "content": {}
        },
        {
          "name": "boolean-condition-16",
          "type": "branch",
          "content": {
            "true": [
              {
                "name": "netsuite-11",
                "type": "normal",
                "content": {}
              }
            ],
            "false": []
          }
        },
        {
          "name": "netsuite-16",
          "type": "normal",
          "content": {}
        },
        {
          "name": "netsuite-8",
          "type": "normal",
          "content": {}
        },
        {
          "name": "script-14",
          "type": "normal",
          "content": {}
        },
        {
          "name": "boolean-condition-10",
          "type": "branch",
          "content": {
            "true": [
              {
                "name": "netsuite-18",
                "type": "normal",
                "content": {}
              }
            ],
            "false": []
          }
        },
        {
          "name": "call-workflow-2",
          "type": "normal",
          "content": {}
        },
        {
          "name": "script-2",
          "type": "normal",
          "content": {}
        },
        {
          "name": "netsuite-12",
          "type": "branch",
          "content": {
            "error": [],
            "success": [
              {
                "name": "boolean-condition-5",
                "type": "branch",
                "content": {
                  "true": [
                    {
                      "name": "script-5",
                      "type": "normal",
                      "content": {}
                    },
                    {
                      "name": "netsuite-9",
                      "type": "normal",
                      "content": {}
                    }
                  ],
                  "false": []
                }
              },
              {
                "name": "script-7",
                "type": "normal",
                "content": {}
              },
              {
                "name": "netsuite-1",
                "type": "normal",
                "content": {}
              },
              {
                "name": "boolean-condition-7",
                "type": "branch",
                "content": {
                  "true": [],
                  "false": [
                    {
                      "name": "salesforce-4",
                      "type": "normal",
                      "content": {}
                    },
                    {
                      "name": "call-workflow-1",
                      "type": "normal",
                      "content": {}
                    },
                    {
                      "name": "storage-10",
                      "type": "normal",
                      "content": {}
                    },
                    {
                      "name": "callable-workflow-response-3",
                      "type": "normal",
                      "content": {}
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "boolean-condition-4",
          "type": "branch",
          "content": {
            "true": [
              {
                "name": "script-12",
                "type": "normal",
                "content": {}
              },
              {
                "name": "netsuite-13",
                "type": "normal",
                "content": {}
              },
              {
                "name": "script-10",
                "type": "normal",
                "content": {}
              },
              {
                "name": "boolean-condition-14",
                "type": "branch",
                "content": {
                  "true": [
                    {
                      "name": "netsuite-19",
                      "type": "normal",
                      "content": {}
                    }
                  ],
                  "false": []
                }
              },
              {
                "name": "netsuite-6",
                "type": "normal",
                "content": {}
              },
              {
                "name": "script-8",
                "type": "normal",
                "content": {}
              },
              {
                "name": "storage-13",
                "type": "normal",
                "content": {}
              },
              {
                "name": "salesforce-3",
                "type": "normal",
                "content": {}
              }
            ],
            "false": [
              {
                "name": "netsuite-7",
                "type": "normal",
                "content": {}
              },
              {
                "name": "script-9",
                "type": "normal",
                "content": {}
              },
              {
                "name": "script-18",
                "type": "normal",
                "content": {}
              },
              {
                "name": "netsuite-14",
                "type": "normal",
                "content": {}
              },
              {
                "name": "netsuite-15",
                "type": "normal",
                "content": {}
              },
              {
                "name": "boolean-condition-6",
                "type": "branch",
                "content": {
                  "true": [],
                  "false": [
                    {
                      "name": "terminate-2",
                      "type": "normal",
                      "content": {}
                    }
                  ]
                }
              },
              {
                "name": "storage-9",
                "type": "normal",
                "content": {}
              },
              {
                "name": "salesforce-5",
                "type": "normal",
                "content": {}
              },
              {
                "name": "netsuite-20",
                "type": "normal",
                "content": {}
              },
              {
                "name": "script-16",
                "type": "normal",
                "content": {}
              },
              {
                "name": "netsuite-17",
                "type": "normal",
                "content": {}
              },
              {
                "name": "script-17",
                "type": "normal",
                "content": {}
              },
              {
                "name": "boolean-condition-12",
                "type": "branch",
                "content": {
                  "true": [
                    {
                      "name": "netsuite-21",
                      "type": "normal",
                      "content": {}
                    }
                  ],
                  "false": []
                }
              }
            ]
          }
        },
        {
          "name": "storage-14",
          "type": "normal",
          "content": {}
        },
        {
          "name": "netsuite-2",
          "type": "normal",
          "content": {}
        },
        {
          "name": "date-time-helpers-1",
          "type": "normal",
          "content": {}
        },
        {
          "name": "math-helpers-1",
          "type": "normal",
          "content": {}
        },
        {
          "name": "netsuite-3",
          "type": "normal",
          "content": {}
        },
        {
          "name": "script-20",
          "type": "normal",
          "content": {}
        },
        {
          "name": "boolean-condition-13",
          "type": "branch",
          "content": {
            "true": [
              {
                "name": "netsuite-22",
                "type": "normal",
                "content": {}
              }
            ],
            "false": []
          }
        },
        {
          "name": "boolean-condition-15",
          "type": "branch",
          "content": {
            "true": [
              {
                "name": "math-helpers-2",
                "type": "normal",
                "content": {}
              },
              {
                "name": "netsuite-23",
                "type": "normal",
                "content": {}
              }
            ],
            "false": []
          }
        },
        {
          "name": "storage-7",
          "type": "normal",
          "content": {}
        },
        {
          "name": "callable-workflow-response-1",
          "type": "normal",
          "content": {}
        }
      ],
      "steps": {
        "storage-2": {
          "title": "Format a NS Subscription Line",
          "description": "No information from SF is needed here, so we can process support item along with others.",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "append_to_list",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Current Run"
            },
            "key": {
              "type": "string",
              "value": "subscriptionline"
            },
            "value": {
              "type": "object",
              "value": {
                "revrecoption": {
                  "type": "jsonpath",
                  "value": "$.steps.script-11.result.revrecoption"
                },
                "isIncluded": {
                  "type": "boolean",
                  "value": true
                },
                "subscriptionlinetype": {
                  "type": "jsonpath",
                  "value": "$.steps.storage-4.value.subscriptionLineType.id",
                  "fallback": {
                    "value": "$.steps.script-3.result.subscriptionLineType.id",
                    "type": "jsonpath"
                  }
                },
                "department": {
                  "type": "jsonpath",
                  "value": "$.steps.netsuite-5.department.id",
                  "fallback": {
                    "type": "number",
                    "value": 2
                  }
                },
                "status": {
                  "type": "object",
                  "value": {
                    "id": {
                      "type": "string",
                      "value": "DRAFT"
                    }
                  }
                },
                "item": {
                  "type": "jsonpath",
                  "value": "$.steps.loop-1.value.SBQQ__Product__r.NetSuite_ID__c"
                },
                "class": {
                  "type": "jsonpath",
                  "value": "$.steps.netsuite-5.class.id"
                },
                "lineNumber": {
                  "type": "jsonpath",
                  "value": "$.steps.storage-4.value.lineNumber",
                  "fallback": {
                    "value": null,
                    "type": "null"
                  }
                },
                "billingmode": {
                  "type": "jsonpath",
                  "value": "$.steps.storage-4.value.billingMode.id",
                  "fallback": {
                    "type": "jsonpath",
                    "value": "$.steps.script-3.result.billingMode.id"
                  }
                }
              }
            },
            "create_if_missing": {
              "type": "boolean",
              "value": true
            }
          }
        },
        "storage-12": {
          "title": "Format a NS Subscription Line",
          "description": "No information from SF is needed here, so we can process support item along with others.",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "append_to_list",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Current Run"
            },
            "key": {
              "type": "string",
              "value": "subscriptionline"
            },
            "value": {
              "type": "object",
              "value": {
                "revrecoption": {
                  "type": "jsonpath",
                  "value": "$.steps.script-3.result.revRecOption"
                },
                "isIncluded": {
                  "type": "boolean",
                  "value": true
                },
                "subscriptionlinetype": {
                  "type": "jsonpath",
                  "value": "$.steps.script-15.result.linetype"
                },
                "department": {
                  "type": "jsonpath",
                  "value": "$.steps.netsuite-5.department.id",
                  "fallback": {
                    "type": "number",
                    "value": 2
                  }
                },
                "status": {
                  "type": "object",
                  "value": {
                    "id": {
                      "type": "string",
                      "value": "DRAFT"
                    }
                  }
                },
                "item": {
                  "type": "jsonpath",
                  "value": "$.steps.loop-1.value.SBQQ__Product__r.NetSuite_ID__c"
                },
                "class": {
                  "type": "jsonpath",
                  "value": "$.steps.netsuite-5.class.id"
                },
                "lineNumber": {
                  "type": "null",
                  "value": null
                },
                "billingmode": {
                  "type": "string",
                  "value": "IN_ADVANCE"
                }
              }
            },
            "create_if_missing": {
              "type": "boolean",
              "value": true
            }
          }
        },
        "script-17": {
          "title": "Not Included Lines Payload",
          "description": "Some items from the subscription plan might not be included, but they are in 'Draft' by default",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "subscription"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-20"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "products"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.script-16.result"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "exports.step = function(input) {\n  let subItems = input.subscription.subscriptionLine.items;\n  let linesToUpdate = [];\n  for (let i = 0; i < subItems.length; i++) {\n    let curItem = subItems[i].item.id;\n    let indexInProducts = input.products.lines\n    \t\t\t\t\t\t\t\t.findIndex(f=>f.lineNumber === subItems[i].lineNumber);\n    if(indexInProducts === -1){\n      linesToUpdate.push({\n      \t\"lineNumber\": subItems[i].lineNumber,\n        \"isIncluded\": false\n      });\n    }\n  }\n  return linesToUpdate;\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "salesforce-3": {
          "title": "Save NS Id to Opportunity",
          "description": "Store the Netsuite Subscription Id in the Salesforce Opportunity",
          "connector": {
            "name": "salesforce",
            "version": "8.6"
          },
          "operation": "update_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "2c440ec0-5ac6-4a09-aef3-d861faa8c602",
            "title": "SF-Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/a8ff6c9514c35c853b350382534fb624.png"
            },
            "scopes": [
              "refresh_token",
              "full"
            ],
            "service_name": "salesforce",
            "service_version": 1
          },
          "properties": {
            "object": {
              "type": "string",
              "value": "Opportunity"
            },
            "object_id": {
              "type": "jsonpath",
              "value": "$.steps.salesforce-1.records[0].Id"
            },
            "fields": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "NetSuite_ID__c"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.script-8.result"
                    }
                  }
                }
              ]
            }
          }
        },
        "data-mapper-1": {
          "title": "Billing Frequency Map",
          "description": "Map between SF and NS billing frequency values",
          "connector": {
            "name": "data-mapper",
            "version": "3.5"
          },
          "operation": "map_one_value",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "result": {
                "type": "string"
              }
            }
          },
          "error_handling": {},
          "properties": {
            "mappings": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "from": {
                      "type": "string",
                      "value": "Annual"
                    },
                    "to": {
                      "type": "string",
                      "value": "ANNUALLY"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "from": {
                      "type": "string",
                      "value": "Monthly"
                    },
                    "to": {
                      "type": "string",
                      "value": "MONTHLY"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "from": {
                      "type": "string",
                      "value": "Quarterly"
                    },
                    "to": {
                      "type": "string",
                      "value": "QUARTERLY"
                    }
                  }
                }
              ]
            },
            "value": {
              "type": "jsonpath",
              "value": "$.steps.salesforce-1.records[0].SBQQ__PrimaryQuote__r.SBQQ__BillingFrequency__c"
            },
            "default_value": {
              "type": "string",
              "value": "ANNUALLY"
            }
          }
        },
        "netsuite-13": {
          "title": "Query subscription same name",
          "description": "Run the SQL to get the subscription term",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "raw_http_request",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "method": {
              "type": "string",
              "value": "POST"
            },
            "url": {
              "type": "object",
              "value": {
                "endpoint": {
                  "type": "string",
                  "value": "/services/rest/query/v1/suiteql"
                }
              }
            },
            "headers": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "prefer"
                    },
                    "value": {
                      "type": "string",
                      "value": "transient"
                    }
                  }
                }
              ]
            },
            "body": {
              "type": "object",
              "value": {
                "raw": {
                  "type": "jsonpath",
                  "value": "$.steps.script-12.result"
                }
              }
            },
            "include_raw_body": {
              "type": "boolean",
              "value": false
            },
            "parse_response": {
              "type": "string",
              "value": "true"
            }
          }
        },
        "script-6": {
          "title": "Get Product Codes",
          "description": "Get the Main and Support product codes",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "result": {
                "type": "object",
                "properties": {
                  "mainProductCode": {
                    "type": "string"
                  },
                  "supportProductCode": {
                    "type": "string"
                  }
                }
              },
              "console": {
                "type": "array",
                "items": {}
              }
            }
          },
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "plan"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-5.displayName"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "// Construct the product codes from the plan code\nexports.step = function(input, fileInput) {\n  const fields = input.plan.split('-');\n  return {\n      mainProductCode: `${fields[0]}-${fields[1]}-${fields[2]}-${fields[3]}`,\n      supportProductCode: `${fields[0]}-${fields[1]}-${fields[2]}-${fields[4]}`\n  }\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "script-1": {
          "title": "Create SubTerm SQL",
          "description": "SubscriptionTerm is not supported by REST, so we get it via SuiteQL. Creating a query",
          "connector": {
            "name": "script",
            "version": "3.0"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "months"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-1.records[0].Opportunity_Term__c"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "exports.step = function (input) {\n  return {\n    q:\n      \"SELECT  * FROM subscriptionterm WHERE subscriptiontermunit = 'MONTHS' AND subscriptiontermduration=\" +\n      input.months\n  };\n};\n"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "script-13": {
          "title": "Prices Distribution",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "lines"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-2.records"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "plan"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-5.id"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "codes"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.script-6.result"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "exports.step = function(input) {\n  let split = (totalPrice, coef) => {\n      const supportPrice = Math.round((coef * totalPrice / (1 + coef) + Number.EPSILON) * 100) / 100;\n      const mainPrice = (totalPrice - supportPrice);\n      return { mainPrice, supportPrice };\n  }\n  let planItem = input.lines.find(f => f.SBQQ__Product__r.NetSuite_ID__c === input.plan);\n  let supportLevelCode = planItem.SBQQ__Product__r.ProductCode.split('-')[4];\n  let supportCoef = .20; // Silver\n  if (supportLevelCode === \"GOL\") supportCoef = .35;\n  if (supportLevelCode === \"PLA\") supportCoef = .45;\n  const bundles = input.lines.filter(f => f.SBQQ__Bundle__c === true);\n  bundles.forEach(bundleItem => {\n    const bundleCodeParts = bundleItem.SBQQ__Product__r.ProductCode.split('-');\n    const mainBundleItemCode = bundleCodeParts.slice(0,4).join('-');\n    const supportBundleItemCode = bundleCodeParts.slice(0,3).join('-') + '-' + bundleCodeParts[4];\n    const mainBundleProduct = input.lines.find(f => f.SBQQ__Product__r.ProductCode === mainBundleItemCode);\n    const supportBundleProduct = input.lines.find(f => f.SBQQ__Product__r.ProductCode === supportBundleItemCode);\n    if (mainBundleProduct) {\n      const splitPrice = split(bundleItem.SBQQ__NetTotal__c, supportCoef);\n      mainBundleProduct.SBQQ__NetTotal__c = splitPrice.mainPrice;\n      supportBundleProduct.SBQQ__NetTotal__c = splitPrice.supportPrice;\n    } else {\n      supportBundleProduct.SBQQ__NetTotal__c = planItem.SBQQ__NetTotal__c;\n    }\n    const bundleIndex = input.lines.findIndex(f => f.SBQQ__Product__r.ProductCode === bundleItem.SBQQ__Product__r.ProductCode);\n    input.lines.splice(bundleIndex, 1);\n  });\n\n  let zeroPrices = input.lines.filter(f => f.SBQQ__NetTotal__c === 0);\n  zeroPrices.forEach(supportItem => {\n    const elemCode = supportItem.SBQQ__Product__r.ProductCode.split('-');\n    const mainItem = input.lines.find(f => f.SBQQ__Product__r.ProductCode.startsWith(`${elemCode[0]}-${elemCode[1]}-${elemCode[2]}`)\n      && f.SBQQ__NetTotal__c > 0);\n      if (mainItem) {\n          const splitPrice = split(mainItem.SBQQ__NetTotal__c, supportCoef);\n          supportItem.SBQQ__NetTotal__c = splitPrice.supportPrice;\n          mainItem.SBQQ__NetTotal__c = splitPrice.mainPrice;\n      }\n  });\n\treturn input.lines;\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "call-workflow-3": {
          "title": "Activate and get customers",
          "connector": {
            "name": "call-workflow",
            "version": "2.0"
          },
          "operation": "fire_and_wait_for_response",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "workflow_id": {
              "type": "string",
              "value": "760a8711-27c6-4ba5-aab4-479042128cb8"
            },
            "trigger_input": {
              "type": "object",
              "value": {
                "endUserId": {
                  "type": "jsonpath",
                  "value": "$.steps.script-4.result.endUser"
                },
                "distributorId": {
                  "type": "jsonpath",
                  "value": "$.steps.script-4.result.distributor"
                },
                "resellerId": {
                  "type": "jsonpath",
                  "value": "$.steps.script-4.result.reseller"
                },
                "customerId": {
                  "type": "jsonpath",
                  "value": "$.steps.script-4.result.customer"
                }
              }
            }
          }
        },
        "netsuite-17": {
          "title": "Update the NS Subscription",
          "description": "Pass all the data to a new Subscription",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "update_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "record_type": {
              "type": "string",
              "value": "Subscription"
            },
            "record_id": {
              "type": "jsonpath",
              "value": "$.steps.netsuite-15.renewalSteps.items[0].subscription.id"
            },
            "writable_record_fields": {
              "type": "array",
              "value": [
                {
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "subscriptionLine"
                    },
                    "value": {
                      "type": "object",
                      "value": {
                        "items": {
                          "type": "jsonpath",
                          "value": "$.steps.script-16.result.lines"
                        }
                      }
                    }
                  },
                  "type": "object"
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "priceInterval"
                    },
                    "value": {
                      "type": "object",
                      "value": {
                        "items": {
                          "type": "jsonpath",
                          "value": "$.steps.script-16.result.prices"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "billingAccount"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.call-workflow-2.response.billingAccountId",
                      "fallback": {
                        "value": "",
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "custrecord_subs_end_user"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-1.records[0].Account.NetSuite_ID__c"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "custrecord_subs_distributor"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.script-4.result.distributor",
                      "fallback": {
                        "type": "null",
                        "value": null
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "custrecord_subs_reseller"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.script-4.result.reseller",
                      "fallback": {
                        "type": "null",
                        "value": null
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "custrecord_parent_subscription"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-1.records[0].Parent_Subscription_ID__c"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "priceBook"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-8.items[0].id"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "defaultRenewalPlan"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-5.id"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "defaultRenewalPriceBook"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-8.items[0].id"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "custrecord_sales_team"
                    },
                    "value": {
                      "type": "number",
                      "value": 1
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "custrecord_subscription_salesrep"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-1.records[0].Owner.NetSuite_ID__c",
                      "fallback": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        },
        "netsuite-2": {
          "title": "Get Created  Subscription",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "get_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "record_type": {
              "type": "string",
              "value": "subscription"
            },
            "record_id": {
              "type": "jsonpath",
              "value": "$.steps.storage-14.value"
            },
            "expand_sub_resources": {
              "value": false,
              "type": "boolean"
            }
          }
        },
        "storage-5": {
          "title": "Store OppId",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "set",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Account"
            },
            "key": {
              "type": "string",
              "value": "Opp_{$.env.execution_uuid}"
            },
            "value": {
              "type": "jsonpath",
              "value": "$.steps.salesforce-1.records[0].Id",
              "fallback": {
                "value": null,
                "type": "null"
              }
            }
          }
        },
        "script-10": {
          "title": "Get subscription name",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "customer"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.call-workflow-3.response.customer"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "startDate"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-1.records[0].SBQQ__PrimaryQuote__r.SBQQ__StartDate__c"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "endUser"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.call-workflow-3.response.endUser",
                      "fallback": {
                        "type": "null",
                        "value": null
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "subscriptionsQuery"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-13.response.body"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "opportunityType"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-1.records[0].Type"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "exports.step = function(input) {\n  let name = getNameFromCustomer(input.customer)\n  if (input.endUser){\n    name += `(${getNameFromCustomer(input.endUser)})`;\n  }\n  // subscription name can have max of 50 characters\n  // and 16 for # date Renew that is added\n  name = name.substring(0, 34);\n  const dateParts = input.startDate.split('-');\n  const renewStr = input.opportunityType == 'Renewal' ? ' Renew' : '';\n  const lastPart = `${dateParts[1]}-${dateParts[0]}${renewStr}`;\n  if (input.subscriptionsQuery.count > 0) {\n    return getNameUnused(input.subscriptionsQuery.items, name, lastPart);\n  }\n\treturn `${name} ${lastPart}`;\n}\n\nfunction getNameUnused(subscriptions, name, lastPart, number = undefined) {\n  let search = name;\n  if (number){\n    search += ` ${number}`;\n    number++;\n  } else {\n    number = 1;\n  }\n  search = `${search} ${lastPart}`;\n  if (subscriptions.find(i => i.name === search)){\n    return getNameUnused(subscriptions, name, lastPart, number);\n  }\n  return search;\n}\n\nfunction getNameFromCustomer(customer){\n  return customer.isPerson ? \n    [customer.firstName, customer.middleName, customer.lastName]\n\t\t.filter(f=>Boolean(f)) // filter out empty fields\n\t\t.join(' ')\n  \t: customer.companyName;\n}"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "boolean-condition-15": {
          "title": "Primary Quote has NS ID?",
          "description": "Check if the primary quote has netsuite id set",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-1.records[0].SBQQ__PrimaryQuote__r.NetSuite_ID__c",
                      "fallback": {
                        "value": null,
                        "type": "null"
                      }
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "!=="
                    },
                    "value2": {
                      "type": "null",
                      "value": null
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "boolean-condition-5": {
          "title": "Not Included status?",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-12.billingSubscriptionStatus.id"
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "==="
                    },
                    "value2": {
                      "type": "string",
                      "value": "NOT_INCLUDED"
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "storage-9": {
          "title": "Save Created Sub Id",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "set",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Current Run"
            },
            "key": {
              "type": "string",
              "value": "createdSubscriptionId"
            },
            "value": {
              "type": "jsonpath",
              "value": "$.steps.netsuite-15.renewalSteps.items[0].subscription.id"
            }
          }
        },
        "boolean-condition-2": {
          "title": "Term Not Found?",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-4.response.body.items[0].id",
                      "fallback": {
                        "value": "",
                        "type": "string"
                      }
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "==="
                    },
                    "value2": {
                      "type": "string",
                      "value": ""
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "callable-workflow-response-1": {
          "title": "Return the NS Subscription Id",
          "description": "NS Subscription Id is being returned to the calling flow.",
          "connector": {
            "name": "callable-workflow-response",
            "version": "1.0"
          },
          "operation": "response",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "response": {
              "type": "object",
              "value": {
                "subscription": {
                  "type": "jsonpath",
                  "value": "$.steps.storage-14.value"
                },
                "message": {
                  "type": "string",
                  "value": "Success"
                },
                "WasSyncEnabled": {
                  "value": true,
                  "type": "boolean"
                },
                "sfPartnerId": {
                  "type": "jsonpath",
                  "value": "$.steps.script-4.result.sfPartnerId"
                }
              }
            }
          }
        },
        "script-3": {
          "title": "Get Main Item",
          "description": "The main item will be used for price splitting.",
          "connector": {
            "name": "script",
            "version": "3.0"
          },
          "operation": "execute",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "result": {
                "type": "object",
                "properties": {
                  "revRecOption": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "refName": {
                        "type": "string"
                      }
                    }
                  },
                  "prorateStartDate": {
                    "type": "boolean"
                  },
                  "isRequired": {
                    "type": "boolean"
                  },
                  "subscriptionLineType": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "refName": {
                        "type": "string"
                      }
                    }
                  },
                  "renewalOption": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "refName": {
                        "type": "string"
                      }
                    }
                  },
                  "item": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rel": {
                              "type": "string"
                            },
                            "href": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "id": {
                        "type": "string"
                      },
                      "refName": {
                        "type": "string"
                      }
                    }
                  },
                  "links": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "rel": {
                          "type": "string"
                        },
                        "href": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "prorateEndDate": {
                    "type": "boolean"
                  },
                  "lineNumber": {
                    "type": "number"
                  },
                  "billingMode": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "refName": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "console": {
                "type": "array",
                "items": {}
              }
            }
          },
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "plan"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-5"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "productCodes"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.script-6.result"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "exports.step = function (input) {\n    // Find the main product in the Subscription Plan\n    const mainItem = input.plan.member.items.filter(item => item.item.refName === input.productCodes.mainProductCode)[0];\n    if (mainItem) { return mainItem; }\n    else {\n        // Support only plan\n      console.log('supportOnly');\n        return input.plan.member.items.filter(item => item.item.refName === input.productCodes.supportProductCode)[0];\n    }\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "netsuite-5": {
          "title": "Get Subscription Plan",
          "description": "Retrieve all the Subscription Plan fields",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "get_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "record_type": {
              "type": "string",
              "value": "subscriptionplan"
            },
            "record_id": {
              "type": "jsonpath",
              "value": "$.steps.loop-2.value.SBQQ__Product__r.NetSuite_ID__c"
            },
            "expand_sub_resources": {
              "type": "boolean",
              "value": true
            }
          }
        },
        "call-workflow-2": {
          "title": "Get Billing Account",
          "connector": {
            "name": "call-workflow",
            "version": "2.0"
          },
          "operation": "fire_and_wait_for_response",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "workflow_id": {
              "type": "string",
              "value": "ee2424ff-2259-4ee3-90c3-1dc66b8460d3"
            },
            "trigger_input": {
              "type": "object",
              "value": {
                "customerId": {
                  "type": "jsonpath",
                  "value": "$.steps.call-workflow-3.response.customer.id"
                },
                "frequency": {
                  "type": "jsonpath",
                  "value": "$.steps.data-mapper-1.result"
                },
                "currency": {
                  "type": "jsonpath",
                  "value": "$.steps.netsuite-16.response.body.items[0].id"
                },
                "parentSubsidiaryId": {
                  "type": "jsonpath",
                  "value": "$.steps.netsuite-11.subsidiary.id",
                  "fallback": {
                    "type": "null",
                    "value": null
                  }
                },
                "startDate": {
                  "type": "jsonpath",
                  "value": "$.steps.salesforce-1.records[0].SBQQ__PrimaryQuote__r.SBQQ__StartDate__c"
                },
                "opportunityId": {
                  "type": "jsonpath",
                  "value": "$.steps.salesforce-1.records[0].Id"
                },
                "classId": {
                  "type": "jsonpath",
                  "value": "$.steps.netsuite-5.class.id"
                },
                "parentSubscriptionId": {
                  "type": "jsonpath",
                  "value": "$.steps.netsuite-11.id"
                }
              }
            }
          }
        },
        "netsuite-12": {
          "title": "Get Existing Subscription",
          "description": "Delete quotes and the old subscription if they exist.",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "get_record",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "links": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "rel": {
                      "type": "string"
                    },
                    "href": {
                      "type": "string"
                    }
                  }
                }
              },
              "advanceRenewalPeriodNumber": {
                "type": "number"
              },
              "advanceRenewalPeriodUnit": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "refName": {
                    "type": "string"
                  }
                }
              },
              "autoRenewal": {
                "type": "boolean"
              },
              "billingAccount": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "rel": {
                          "type": "string"
                        },
                        "href": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "id": {
                    "type": "string"
                  },
                  "refName": {
                    "type": "string"
                  }
                }
              },
              "billingAccountStartDate": {
                "type": "string"
              },
              "billingSchedule": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "array",
                    "items": {}
                  },
                  "id": {
                    "type": "string"
                  },
                  "refName": {
                    "type": "string"
                  }
                }
              },
              "billingSubscriptionStatus": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "refName": {
                    "type": "string"
                  }
                }
              },
              "class": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "array",
                    "items": {}
                  },
                  "id": {
                    "type": "string"
                  },
                  "refName": {
                    "type": "string"
                  }
                }
              },
              "currency": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "array",
                    "items": {}
                  },
                  "id": {
                    "type": "string"
                  },
                  "refName": {
                    "type": "string"
                  }
                }
              },
              "customer": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "rel": {
                          "type": "string"
                        },
                        "href": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "id": {
                    "type": "string"
                  },
                  "refName": {
                    "type": "string"
                  }
                }
              },
              "customForm": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "refName": {
                    "type": "string"
                  }
                }
              },
              "custrecord19": {
                "type": "boolean"
              },
              "custrecord_base_amount": {
                "type": "number"
              },
              "custrecord_contract_docs": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "rel": {
                          "type": "string"
                        },
                        "href": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "id": {
                    "type": "string"
                  },
                  "refName": {
                    "type": "string"
                  }
                }
              },
              "custrecord_parent_subscription": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "rel": {
                          "type": "string"
                        },
                        "href": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "id": {
                    "type": "string"
                  },
                  "refName": {
                    "type": "string"
                  }
                }
              },
              "custrecord_subs_end_user": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "rel": {
                          "type": "string"
                        },
                        "href": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "id": {
                    "type": "string"
                  },
                  "refName": {
                    "type": "string"
                  }
                }
              },
              "custrecordistrial": {
                "type": "boolean"
              },
              "defaultRenewalMethod": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "refName": {
                    "type": "string"
                  }
                }
              },
              "defaultRenewalPlan": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "rel": {
                          "type": "string"
                        },
                        "href": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "id": {
                    "type": "string"
                  },
                  "refName": {
                    "type": "string"
                  }
                }
              },
              "defaultRenewalPriceBook": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "rel": {
                          "type": "string"
                        },
                        "href": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "id": {
                    "type": "string"
                  },
                  "refName": {
                    "type": "string"
                  }
                }
              },
              "defaultRenewalTerm": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "rel": {
                          "type": "string"
                        },
                        "href": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "id": {
                    "type": "string"
                  },
                  "refName": {
                    "type": "string"
                  }
                }
              },
              "department": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "array",
                    "items": {}
                  },
                  "id": {
                    "type": "string"
                  },
                  "refName": {
                    "type": "string"
                  }
                }
              },
              "endDate": {
                "type": "string"
              },
              "frequency": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "refName": {
                    "type": "string"
                  }
                }
              },
              "id": {
                "type": "string"
              },
              "idNumber": {
                "type": "string"
              },
              "initialTerm": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "rel": {
                          "type": "string"
                        },
                        "href": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "id": {
                    "type": "string"
                  },
                  "refName": {
                    "type": "string"
                  }
                }
              },
              "name": {
                "type": "string"
              },
              "nextBillCycleDate": {
                "type": "string"
              },
              "nextRenewalStartDate": {
                "type": "string"
              },
              "priceBook": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "rel": {
                          "type": "string"
                        },
                        "href": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "id": {
                    "type": "string"
                  },
                  "refName": {
                    "type": "string"
                  }
                }
              },
              "priceInterval": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "rel": {
                          "type": "string"
                        },
                        "href": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "rel": {
                                "type": "string"
                              },
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "rel",
                              "href"
                            ]
                          }
                        },
                        "catalogType": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "refName": {
                              "type": "string"
                            }
                          }
                        },
                        "chargeType": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "refName": {
                              "type": "string"
                            }
                          }
                        },
                        "discount": {
                          "type": "number"
                        },
                        "frequency": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "refName": {
                              "type": "string"
                            }
                          }
                        },
                        "id": {
                          "type": "number"
                        },
                        "item": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "rel": {
                                    "type": "string"
                                  },
                                  "href": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "rel",
                                  "href"
                                ]
                              }
                            },
                            "id": {
                              "type": "string"
                            },
                            "refName": {
                              "type": "string"
                            }
                          }
                        },
                        "lineNumber": {
                          "type": "number"
                        },
                        "pricePlan": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "rel": {
                                    "type": "string"
                                  },
                                  "href": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "rel",
                                  "href"
                                ]
                              }
                            },
                            "id": {
                              "type": "string"
                            },
                            "refName": {
                              "type": "string"
                            }
                          }
                        },
                        "prorateBy": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "refName": {
                              "type": "string"
                            }
                          }
                        },
                        "proratebyoption": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "refName": {
                              "type": "string"
                            }
                          }
                        },
                        "quantity": {
                          "type": "number"
                        },
                        "recurringAmount": {
                          "type": "number"
                        },
                        "repeatEvery": {
                          "type": "number"
                        },
                        "startDate": {
                          "type": "string"
                        },
                        "startOffsetValue": {
                          "type": "number"
                        },
                        "status": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "refName": {
                              "type": "string"
                            }
                          }
                        },
                        "subscriptionPlanLineNumber": {
                          "type": "number"
                        },
                        "totalintervalvalue": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "links",
                        "catalogType",
                        "chargeType",
                        "discount",
                        "frequency",
                        "id",
                        "item",
                        "lineNumber",
                        "pricePlan",
                        "prorateBy",
                        "proratebyoption",
                        "quantity",
                        "recurringAmount",
                        "repeatEvery",
                        "startDate",
                        "startOffsetValue",
                        "status",
                        "subscriptionPlanLineNumber",
                        "totalintervalvalue"
                      ]
                    }
                  },
                  "totalResults": {
                    "type": "number"
                  }
                }
              },
              "renewalNumber": {
                "type": "number"
              },
              "startDate": {
                "type": "string"
              },
              "subscriptionLine": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "rel": {
                          "type": "string"
                        },
                        "href": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "links": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "rel": {
                                "type": "string"
                              },
                              "href": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "rel",
                              "href"
                            ]
                          }
                        },
                        "billingMode": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "refName": {
                              "type": "string"
                            }
                          }
                        },
                        "catalogType": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "refName": {
                              "type": "string"
                            }
                          }
                        },
                        "class": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "type": "array",
                              "items": {}
                            },
                            "id": {
                              "type": "string"
                            },
                            "refName": {
                              "type": "string"
                            }
                          }
                        },
                        "department": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "type": "array",
                              "items": {}
                            },
                            "id": {
                              "type": "string"
                            },
                            "refName": {
                              "type": "string"
                            }
                          }
                        },
                        "discount": {
                          "type": "number"
                        },
                        "endDate": {
                          "type": "string"
                        },
                        "includeInRenewal": {
                          "type": "boolean"
                        },
                        "isIncluded": {
                          "type": "boolean"
                        },
                        "isRequired": {
                          "type": "boolean"
                        },
                        "item": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "rel": {
                                    "type": "string"
                                  },
                                  "href": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "rel",
                                  "href"
                                ]
                              }
                            },
                            "id": {
                              "type": "string"
                            },
                            "refName": {
                              "type": "string"
                            }
                          }
                        },
                        "lineNumber": {
                          "type": "number"
                        },
                        "planItem": {
                          "type": "number"
                        },
                        "prorateEndDate": {
                          "type": "boolean"
                        },
                        "prorateStartDate": {
                          "type": "boolean"
                        },
                        "quantity": {
                          "type": "number"
                        },
                        "recurrenceStartDate": {
                          "type": "string"
                        },
                        "revRecOption": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "refName": {
                              "type": "string"
                            }
                          }
                        },
                        "startDate": {
                          "type": "string"
                        },
                        "status": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "refName": {
                              "type": "string"
                            }
                          }
                        },
                        "subscriptionLine": {
                          "type": "number"
                        },
                        "subscriptionLineType": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "refName": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "required": [
                        "links",
                        "billingMode",
                        "catalogType",
                        "class",
                        "department",
                        "discount",
                        "endDate",
                        "includeInRenewal",
                        "isIncluded",
                        "isRequired",
                        "item",
                        "lineNumber",
                        "planItem",
                        "prorateEndDate",
                        "prorateStartDate",
                        "quantity",
                        "recurrenceStartDate",
                        "revRecOption",
                        "startDate",
                        "status",
                        "subscriptionLine",
                        "subscriptionLineType"
                      ]
                    }
                  },
                  "totalResults": {
                    "type": "number"
                  }
                }
              },
              "subscriptionPlan": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "rel": {
                          "type": "string"
                        },
                        "href": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "id": {
                    "type": "string"
                  },
                  "refName": {
                    "type": "string"
                  }
                }
              },
              "subscriptionPlanName": {
                "type": "string"
              },
              "subscriptionRevision": {
                "type": "number"
              },
              "subsidiary": {
                "type": "object",
                "properties": {
                  "links": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "rel": {
                          "type": "string"
                        },
                        "href": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "id": {
                    "type": "string"
                  },
                  "refName": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "error_handling": {
            "strategy": "manual"
          },
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "record_type": {
              "type": "string",
              "value": "Subscription"
            },
            "record_id": {
              "type": "jsonpath",
              "value": "$.steps.salesforce-1.records[0].NetSuite_ID__c",
              "fallback": {
                "value": "0",
                "type": "string"
              }
            },
            "expand_sub_resources": {
              "value": true,
              "type": "boolean"
            }
          }
        },
        "salesforce-7": {
          "title": "Get Primary Partner",
          "description": "Get the primary partner from SF Opportunity if any.",
          "connector": {
            "name": "salesforce",
            "version": "8.6"
          },
          "operation": "find_records",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "total": {
                "type": "integer",
                "title": "Total count"
              },
              "next_page_offset": {
                "type": "string",
                "title": "Next page offset"
              },
              "records": {
                "title": "Opportunity Partner",
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "Opportunity Partner",
                  "properties": {
                    "Role": {
                      "name": "Role",
                      "type": "string",
                      "title": "Role"
                    }
                  }
                }
              }
            }
          },
          "error_handling": {},
          "authentication": {
            "group": "2c440ec0-5ac6-4a09-aef3-d861faa8c602",
            "title": "SF-Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/a8ff6c9514c35c853b350382534fb624.png"
            },
            "scopes": [
              "refresh_token",
              "full"
            ],
            "service_name": "salesforce",
            "service_version": 1
          },
          "properties": {
            "fields": {
              "type": "array",
              "value": [
                {
                  "type": "string",
                  "value": "AccountTo.NetSuite_ID__c"
                },
                {
                  "type": "string",
                  "value": "Role"
                }
              ]
            },
            "conditions_type": {
              "type": "string",
              "value": "Match all conditions"
            },
            "include_all_fields": {
              "type": "boolean",
              "value": false
            },
            "object": {
              "type": "string",
              "value": "OpportunityPartner"
            },
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "field": {
                      "type": "string",
                      "value": "OpportunityId"
                    },
                    "operator": {
                      "type": "string",
                      "value": "Equal to"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-1.records[0].Id"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "field": {
                      "type": "string",
                      "value": "IsPrimary"
                    },
                    "operator": {
                      "type": "string",
                      "value": "Equal to"
                    },
                    "value": {
                      "type": "boolean",
                      "value": true
                    }
                  }
                }
              ]
            }
          }
        },
        "boolean-condition-11": {
          "title": "Not Plan Item?",
          "description": "Skip the product corresponding to the plan itself",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-5.id"
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "!=="
                    },
                    "value2": {
                      "type": "jsonpath",
                      "value": "$.steps.loop-1.value.SBQQ__Product__r.NetSuite_ID__c"
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "netsuite-23": {
          "title": "Update related subscription",
          "description": "Update the related subscription in the NS quote",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "update_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "record_type": {
              "type": "string",
              "value": "estimate"
            },
            "record_id": {
              "type": "jsonpath",
              "value": "$.steps.salesforce-1.records[0].SBQQ__PrimaryQuote__r.NetSuite_ID__c"
            },
            "writable_record_fields": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "custbody_related_subscription"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.math-helpers-2.result"
                    }
                  }
                }
              ]
            }
          }
        },
        "storage-3": {
          "title": "Get NS Subscription Lines",
          "description": "Get the Subscription line array we just constructed,",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "get",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "value": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "revrecoption": {
                      "type": "string"
                    },
                    "isIncluded": {
                      "type": "boolean"
                    },
                    "subscriptionlinetype": {
                      "type": "number"
                    },
                    "department": {
                      "type": "number"
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      }
                    },
                    "item": {
                      "type": "string"
                    },
                    "class": {
                      "type": "string"
                    },
                    "lineNumber": {
                      "type": "number"
                    },
                    "billingmode": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "revrecoption",
                    "item",
                    "billingmode",
                    "lineNumber",
                    "department",
                    "class",
                    "subscriptionlinetype",
                    "isIncluded",
                    "status"
                  ]
                }
              }
            }
          },
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Current Run"
            },
            "default_value": {
              "type": "null",
              "value": null
            },
            "key": {
              "type": "string",
              "value": "subscriptionline"
            }
          }
        },
        "netsuite-16": {
          "title": "Get Currency by Code",
          "description": "Run the SQL to get the subscription term",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "raw_http_request",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "status_code": {
                    "type": "number"
                  },
                  "headers": {
                    "type": "object",
                    "properties": {
                      "x-n-operationid": {
                        "type": "string"
                      },
                      "ns_rtimer_composite": {
                        "type": "string"
                      },
                      "strict-transport-security": {
                        "type": "string"
                      },
                      "pragma": {
                        "type": "string"
                      },
                      "cache-control": {
                        "type": "string"
                      },
                      "expires": {
                        "type": "string"
                      },
                      "x-netsuite-jobid": {
                        "type": "string"
                      },
                      "preference-applied": {
                        "type": "string"
                      },
                      "content-type": {
                        "type": "string"
                      },
                      "content-length": {
                        "type": "string"
                      },
                      "p3p": {
                        "type": "string"
                      },
                      "vary": {
                        "type": "string"
                      },
                      "date": {
                        "type": "string"
                      },
                      "connection": {
                        "type": "string"
                      },
                      "set-cookie": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "akamai-grn": {
                        "type": "string"
                      }
                    }
                  },
                  "body": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rel": {
                              "type": "string"
                            },
                            "href": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "count": {
                        "type": "number"
                      },
                      "hasMore": {
                        "type": "boolean"
                      },
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "type": "array",
                              "items": {}
                            },
                            "id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "offset": {
                        "type": "number"
                      },
                      "totalResults": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          },
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "method": {
              "type": "string",
              "value": "POST"
            },
            "url": {
              "type": "object",
              "value": {
                "endpoint": {
                  "type": "string",
                  "value": "/services/rest/query/v1/suiteql"
                }
              }
            },
            "headers": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "prefer"
                    },
                    "value": {
                      "type": "string",
                      "value": "transient"
                    }
                  }
                }
              ]
            },
            "body": {
              "type": "object",
              "value": {
                "raw": {
                  "type": "object",
                  "value": {
                    "q": {
                      "type": "string",
                      "value": "SELECT id FROM currency WHERE symbol='{$.steps.salesforce-1.records[0].CurrencyIsoCode}'"
                    }
                  }
                }
              }
            },
            "include_raw_body": {
              "type": "boolean",
              "value": false
            },
            "parse_response": {
              "type": "string",
              "value": "true"
            },
            "query_parameters": {
              "type": "array",
              "value": []
            }
          }
        },
        "storage-8": {
          "title": "Save Plan Item",
          "description": "Map NS Item Id to the whole SF Subscription to retrieve it later",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "set",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {}
          },
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Current Run"
            },
            "key": {
              "type": "jsonpath",
              "value": "$.steps.loop-5.value.item.id"
            },
            "value": {
              "type": "jsonpath",
              "value": "$.steps.loop-5.value"
            }
          }
        },
        "call-workflow-1": {
          "title": "Append message to opp",
          "connector": {
            "name": "call-workflow",
            "version": "2.0"
          },
          "operation": "fire_and_wait_for_response",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "workflow_id": {
              "type": "string",
              "value": "e96c1f66-536a-4e5c-8bd3-8a2375110837"
            },
            "trigger_input": {
              "type": "object",
              "value": {
                "message": {
                  "type": "string",
                  "value": "Not possible to delete the draft subscription. Please, process this opportunity manually. {$.steps.netsuite-1.response.body.content.error}"
                },
                "chatter_post": {
                  "type": "boolean",
                  "value": true
                },
                "objectType": {
                  "type": "string",
                  "value": "Opportunity"
                },
                "objectId": {
                  "type": "jsonpath",
                  "value": "$.steps.salesforce-1.records[0].Id"
                }
              }
            }
          }
        },
        "boolean-condition-12": {
          "title": "Not Included Items?",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.script-17.result[0]",
                      "fallback": {
                        "value": null,
                        "type": "null"
                      }
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "!=="
                    },
                    "value2": {
                      "type": "null",
                      "value": null
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "loop-1": {
          "title": "Loop SF Quote Lines",
          "description": "Loop through subscriptions to store them in a map and determine a main product",
          "connector": {
            "name": "loop",
            "version": "1.1"
          },
          "operation": "loop_array",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "value": {
                "type": [
                  "string",
                  "number",
                  "object",
                  "array",
                  "boolean",
                  "null"
                ],
                "description": "The script result returned from the function",
                "title": "Result"
              },
              "count": {
                "type": "number"
              },
              "index": {
                "type": "number"
              },
              "is_first": {
                "type": "boolean"
              },
              "is_last": {
                "type": "boolean"
              },
              "branch_name": {
                "type": "string"
              }
            }
          },
          "error_handling": {},
          "properties": {
            "array": {
              "type": "jsonpath",
              "value": "$.steps.script-13.result"
            }
          }
        },
        "storage-4": {
          "title": "Get Plan Item",
          "description": "Get previously saved Plan Item",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "get",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "properties": {
                  "revRecOption": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "refName": {
                        "type": "string"
                      }
                    }
                  },
                  "prorateStartDate": {
                    "type": "boolean"
                  },
                  "isRequired": {
                    "type": "boolean"
                  },
                  "subscriptionLineType": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "refName": {
                        "type": "string"
                      }
                    }
                  },
                  "renewalOption": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "refName": {
                        "type": "string"
                      }
                    }
                  },
                  "item": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rel": {
                              "type": "string"
                            },
                            "href": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "id": {
                        "type": "string"
                      },
                      "refName": {
                        "type": "string"
                      }
                    }
                  },
                  "links": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "rel": {
                          "type": "string"
                        },
                        "href": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "prorateEndDate": {
                    "type": "boolean"
                  },
                  "lineNumber": {
                    "type": "number"
                  },
                  "billingMode": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "refName": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Current Run"
            },
            "key": {
              "type": "jsonpath",
              "value": "$.steps.loop-1.value.SBQQ__Product__r.NetSuite_ID__c"
            },
            "default_value": {
              "type": "null",
              "value": null
            }
          }
        },
        "storage-11": {
          "title": "Format a Price Interval",
          "description": "Add price interval information for the line",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "append_to_list",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Current Run"
            },
            "key": {
              "type": "string",
              "value": "priceInterval"
            },
            "value": {
              "type": "object",
              "value": {
                "subscriptionPlanLineNumber": {
                  "type": "null",
                  "value": null
                },
                "quantity": {
                  "type": "jsonpath",
                  "value": "$.steps.loop-1.value.SBQQ__Quantity__c"
                },
                "repeatEvery": {
                  "type": "jsonpath",
                  "value": "$.steps.script-15.result.repeatevery"
                },
                "frequency": {
                  "type": "jsonpath",
                  "value": "$.steps.script-15.result.frequency"
                },
                "startDate": {
                  "type": "jsonpath",
                  "value": "$.steps.salesforce-1.records[0].SBQQ__PrimaryQuote__r.SBQQ__StartDate__c"
                },
                "totalintervalvalue": {
                  "type": "jsonpath",
                  "value": "$.steps.loop-1.value.SBQQ__NetTotal__c",
                  "fallback": {
                    "type": "number",
                    "value": 0
                  }
                },
                "item": {
                  "type": "jsonpath",
                  "value": "$.steps.loop-1.value.SBQQ__Product__r.NetSuite_ID__c"
                }
              }
            },
            "create_if_missing": {
              "type": "boolean",
              "value": true
            }
          }
        },
        "boolean-condition-4": {
          "title": "Can't Renew?",
          "description": "We can't use the standard renewal process for inactive subscriptions and for different customers, subsidiaries or currencies from the parent subscription.",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-11.billingSubscriptionStatus.id",
                      "fallback": {
                        "type": "null",
                        "value": null
                      }
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "!=="
                    },
                    "value2": {
                      "type": "string",
                      "value": "ACTIVE"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "comparison_type": {
                      "type": "string",
                      "value": "!=="
                    },
                    "is_case_sensitive": {
                      "type": "boolean",
                      "value": false
                    },
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-11.customer.id",
                      "fallback": {
                        "type": "null",
                        "value": null
                      }
                    },
                    "value2": {
                      "type": "jsonpath",
                      "value": "$.steps.call-workflow-3.response.customer.id"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "comparison_type": {
                      "type": "string",
                      "value": "==="
                    },
                    "is_case_sensitive": {
                      "type": "boolean",
                      "value": false
                    },
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.call-workflow-2.response.isParentSubsidiary"
                    },
                    "value2": {
                      "type": "boolean",
                      "value": false
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "comparison_type": {
                      "type": "string",
                      "value": "!=="
                    },
                    "is_case_sensitive": {
                      "type": "boolean",
                      "value": false
                    },
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-16.response.body.items[0].id"
                    },
                    "value2": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-11.currency.id",
                      "fallback": {
                        "type": "null",
                        "value": null
                      }
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "Any"
            }
          }
        },
        "script-16": {
          "title": "Fix Line Numbers",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "subscription"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-20"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "products"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.script-2.result"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "exports.step = function(input, fileInput) {\n\t// We need to add add-ons after the last subscription line\n  let linesInSub = input.subscription.subscriptionLine.items.length;\n  let addOns = 0;\n  for (let i = 0; i < input.products.lines.length; i++) {\n    let curItem = input.products.lines[i].item;\n    let subLineNumber = input.subscription.subscriptionLine.items\n    \t\t\t\t\t\t\t\t.findIndex(f=>f.item.id === curItem);\n    if(subLineNumber === -1){\n      addOns++;\n    \tsubLineNumber = linesInSub + addOns;\n    } else {\n      // Convert zero-based index to 1-based\n      subLineNumber++;\n    }\n      input.products.lines[i].lineNumber = subLineNumber;\n      input.products.prices[i].lineNumber = subLineNumber;\n      input.products.prices[i].subscriptionPlanLineNumber = subLineNumber;\n  }\n  return input.products;\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "boolean-condition-1": {
          "title": "Exist in Plan?",
          "description": "Normally all items should be in the plan. There is a stubb which allows have additional items as add-ons.",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.storage-4.value"
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "!=="
                    },
                    "value2": {
                      "type": "null",
                      "value": null
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "boolean-condition-16": {
          "title": "Has Parent?",
          "description": "New Business and Upsell don't have parent",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-1.records[0].Parent_Subscription_ID__c",
                      "fallback": {
                        "type": "null",
                        "value": null
                      }
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "!=="
                    },
                    "value2": {
                      "type": "null",
                      "value": null
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "math-helpers-2": {
          "title": "Parse subscription id",
          "description": "Parse subscription id, because it need to be an integer to use in the netsuite rest api",
          "connector": {
            "name": "math-helpers",
            "version": "2.0"
          },
          "operation": "parse_number",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "string": {
              "type": "jsonpath",
              "value": "$.steps.storage-14.value"
            }
          }
        },
        "netsuite-9": {
          "title": "Change subscription to draft",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "update_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "record_type": {
              "type": "string",
              "value": "Subscription"
            },
            "writable_record_fields": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "subscriptionLine"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.script-5.result"
                    }
                  }
                }
              ]
            },
            "record_id": {
              "type": "jsonpath",
              "value": "$.steps.salesforce-1.records[0].NetSuite_ID__c"
            }
          }
        },
        "salesforce-4": {
          "title": "Set manual o2c to opp",
          "connector": {
            "name": "salesforce",
            "version": "8.7"
          },
          "operation": "update_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "2c440ec0-5ac6-4a09-aef3-d861faa8c602",
            "title": "SF-Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/a8ff6c9514c35c853b350382534fb624.png"
            },
            "scopes": [
              "refresh_token",
              "full"
            ],
            "service_name": "salesforce",
            "service_version": 1
          },
          "properties": {
            "object": {
              "type": "string",
              "value": "Opportunity"
            },
            "fields": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "Process_O2C_Manually__c"
                    },
                    "value": {
                      "type": "boolean",
                      "value": true
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "Process_O2C_Manually_Reason__c"
                    },
                    "value": {
                      "type": "string",
                      "value": "Not possible to delete the draft subscription: {$.steps.netsuite-1.response.body.content.error}"
                    }
                  }
                }
              ]
            },
            "object_id": {
              "type": "jsonpath",
              "value": "$.steps.salesforce-1.records[0].Id"
            }
          }
        },
        "loop-5": {
          "title": "Loop Subscription Plan Items",
          "description": "Go through the subscription plan items and save the plan information",
          "connector": {
            "name": "loop",
            "version": "1.1"
          },
          "operation": "loop_array",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "value": {},
              "count": {
                "type": "number"
              },
              "index": {
                "type": "number"
              },
              "is_first": {
                "type": "boolean"
              },
              "is_last": {
                "type": "boolean"
              },
              "branch_name": {
                "type": "string"
              }
            }
          },
          "error_handling": {},
          "properties": {
            "array": {
              "type": "jsonpath",
              "value": "$.steps.netsuite-5.member.items"
            }
          }
        },
        "script-7": {
          "title": "Get payload for deleting draft",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "netsuiteLink"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-12.links[0].href"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "restlet"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.config.restlet"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "draftSubscriptionId"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-12.id"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "exports.step = function(input) {\n\tconst regex = /^https:\\/\\/(?<instance>[^.]+)\\./;\n\tconst instance = input.netsuiteLink.match(regex).groups.instance;\n  const request = {\n    url: `https://${instance}.restlets.api.netsuite.com/app/site/hosting/restlet.nl?${input.restlet}`,\n    payload: {\n      op: \"subscription.internalDeleteDraft\",\n      subscriptionId: input.draftSubscriptionId\n  \t}\n  }\n  return request;\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "script-4": {
          "title": "Select customer ids",
          "description": "Choose Customer out of End User,, Reseller and Distributor",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          },
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "partners"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-7.records",
                      "fallback": {
                        "type": "null",
                        "value": null
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "end_user"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-1.records[0].Account.NetSuite_ID__c"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "exports.step = function(input) {\n\tlet customer = input.end_user;\n  const distributor = input.partners.find(i => i.Role === 'Distributor');\n  const distributorId = distributor ? distributor.AccountTo.NetSuite_ID__c : null;\n  \n  let reseller = input.partners.find(i => i.Role === 'VAR/Reseller');\n  if (!reseller) {\n    reseller = input.partners.find(i => !i.Role);\n  }\n  const resellerId = reseller ? reseller.AccountTo.NetSuite_ID__c : null;\n\n  let sfPartnerId = null;\n  if (distributorId) {\n    customer = distributorId;\n    sfPartnerId = distributor.AccountTo.attributes.url.split('/').pop();\n  } else if(resellerId) {\n    customer = resellerId;\n    sfPartnerId = reseller.AccountTo.attributes.url.split('/').pop();\n  } else {\n  \tcustomer = input.end_user\n  }\n  return {\n    customer: customer,\n    distributor: distributorId,\n    reseller: resellerId,\n    endUser: input.end_user,\n    sfPartnerId: sfPartnerId\n  };\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "script-18": {
          "title": "Get payload for renewal order",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "netsuiteLink"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-8.links[0].href"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "restlet"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.config.restlet"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "subscriptionId"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-1.records[0].Parent_Subscription_ID__c"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "renewalTerm"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-4.response.body.items[0].id"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "subLine"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.script-9.result"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "exports.step = function(input) {\n\tconst regex = /^https:\\/\\/(?<instance>[^.]+)\\./;\n\tconst instance = input.netsuiteLink.match(regex).groups.instance;\n  const request = {\n    url: `https://${instance}.restlets.api.netsuite.com/app/site/hosting/restlet.nl?${input.restlet}`,\n    payload: {\n      op: \"subscription.internalCreateRenewalChangeOrder\",\n      subscriptionId: input.subscriptionId,\n      renewalTerm: input.renewalTerm,\n      modificationType: \"IGNORED\",\n      renewalMethod: \"CREATE_NEW_SUBSCRIPTION\",\n      subline: input.subLine\n  \t}\n  }\n  return request;\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "boolean-condition-8": {
          "title": "Enabled Sync?",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-1.records[0].Manual_O2C__c"
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "==="
                    },
                    "value2": {
                      "type": "boolean",
                      "value": false
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "comparison_type": {
                      "type": "string",
                      "value": "==="
                    },
                    "is_case_sensitive": {
                      "type": "boolean",
                      "value": false
                    },
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-1.records[0].Product_Configuration__r.Processed_via_OTC__c"
                    },
                    "value2": {
                      "type": "boolean",
                      "value": true
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "storage-7": {
          "title": "Remove OppId",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "delete",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Account"
            },
            "key": {
              "type": "string",
              "value": "Opp_{$.env.execution_uuid}"
            }
          }
        },
        "boolean-condition-7": {
          "title": "Draft subscription deleted?",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-1.response.body.content.success"
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "==="
                    },
                    "value2": {
                      "type": "boolean",
                      "value": true
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "script-20": {
          "title": "Payload to change quotes link",
          "description": "Gets the payload to change the quote links using restlet and also returns if we need to change it. Only need to change if a subscription existed before that was deleted.",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "netsuiteLink"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-2.links[0].href"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "restlet"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.config.restlet"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "oldSubscriptionId"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-12.id",
                      "fallback": {
                        "type": "null",
                        "value": null
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "newSubscriptionId"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-2.id"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "exports.step = function(input) {\n\tconst regex = /^https:\\/\\/(?<instance>[^.]+)\\./;\n\tconst instance = input.netsuiteLink.match(regex).groups.instance;\n  const request = {\n    shouldChangeQuotes: !!input.oldSubscriptionId,\n    url: `https://${instance}.restlets.api.netsuite.com/app/site/hosting/restlet.nl?${input.restlet}`,\n    payload: {\n      op: \"subscription.internalChangeQuoteLink\",\n      oldSubscriptionId: input.oldSubscriptionId,\n      newSubscriptionId: input.newSubscriptionId\n  \t}\n  }\n  return request;\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "netsuite-15": {
          "title": "Get Created Order",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "get_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "record_type": {
              "type": "string",
              "value": "subscriptionChangeOrder"
            },
            "record_id": {
              "type": "jsonpath",
              "value": "$.steps.netsuite-14.response.body.content.changeOrderId"
            },
            "expand_sub_resources": {
              "value": true,
              "type": "boolean"
            }
          }
        },
        "netsuite-4": {
          "title": "Query SubTerm with SQL",
          "description": "Run the SQL to get the subscription term",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "raw_http_request",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "method": {
              "type": "string",
              "value": "POST"
            },
            "url": {
              "type": "object",
              "value": {
                "endpoint": {
                  "type": "string",
                  "value": "/services/rest/query/v1/suiteql"
                }
              }
            },
            "headers": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "prefer"
                    },
                    "value": {
                      "type": "string",
                      "value": "transient"
                    }
                  }
                }
              ]
            },
            "body": {
              "type": "object",
              "value": {
                "raw": {
                  "type": "jsonpath",
                  "value": "$.steps.script-1.result"
                }
              }
            },
            "include_raw_body": {
              "type": "boolean",
              "value": false
            },
            "parse_response": {
              "type": "string",
              "value": "true"
            }
          }
        },
        "math-helpers-1": {
          "title": "2 Days from Start Date",
          "connector": {
            "name": "math-helpers",
            "version": "2.0"
          },
          "operation": "subtract",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "first_value": {
              "type": "jsonpath",
              "value": "$.steps.date-time-helpers-1.result"
            },
            "second_value": {
              "value": 1,
              "type": "integer"
            }
          }
        },
        "netsuite-11": {
          "title": "Get Parent Subscription",
          "description": "Parent subscription is needed to get the Subsidiary",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "get_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "record_type": {
              "type": "string",
              "value": "Subscription"
            },
            "record_id": {
              "type": "jsonpath",
              "value": "$.steps.salesforce-1.records[0].Parent_Subscription_ID__c"
            },
            "expand_sub_resources": {
              "value": true,
              "type": "boolean"
            }
          }
        },
        "storage-10": {
          "title": "Remove OppId",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "delete",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Account"
            },
            "key": {
              "type": "string",
              "value": "Opp_{$.env.execution_uuid}"
            }
          }
        },
        "netsuite-3": {
          "title": "Set Auto Renewal",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "update_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "record_type": {
              "type": "string",
              "value": "subscription"
            },
            "record_id": {
              "type": "jsonpath",
              "value": "$.steps.storage-14.value"
            },
            "writable_record_fields": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "autoRenewal"
                    },
                    "value": {
                      "type": "boolean",
                      "value": true
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "defaultRenewalMethod"
                    },
                    "value": {
                      "type": "string",
                      "value": "CREATE_NEW_SUBSCRIPTION"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "advanceRenewalPeriodNumber"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.math-helpers-1.result"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "defaultRenewalTerm"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-4.response.body.items[0].id"
                    }
                  }
                }
              ]
            }
          }
        },
        "netsuite-8": {
          "title": "Find NS Pricebook",
          "description": "Find a Pricebook for this Subscription Plan and Currency",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "find_records",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "record_type": {
              "type": "string",
              "value": "priceBook"
            },
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "field": {
                      "type": "string",
                      "value": "subscriptionPlan"
                    },
                    "operator": {
                      "type": "string",
                      "value": "EQUAL"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-5.id"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "field": {
                      "type": "string",
                      "value": "currency"
                    },
                    "operator": {
                      "type": "string",
                      "value": "EQUAL"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-16.response.body.items[0].id"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "field": {
                      "type": "string",
                      "value": "name"
                    },
                    "operator": {
                      "type": "string",
                      "value": "CONTAIN_NOT"
                    },
                    "value": {
                      "type": "string",
                      "value": "DO NOT USE"
                    }
                  }
                }
              ]
            },
            "conditions_matching": {
              "type": "string",
              "value": "Match all conditions"
            },
            "limit": {
              "type": "number",
              "value": 1
            },
            "offset": {
              "type": "number",
              "value": 0
            }
          }
        },
        "salesforce-5": {
          "title": "Save NS Id to Opportunity",
          "description": "Store the Netsuite Subscription Id in the Salesforce Opportunity",
          "connector": {
            "name": "salesforce",
            "version": "8.6"
          },
          "operation": "update_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "2c440ec0-5ac6-4a09-aef3-d861faa8c602",
            "title": "SF-Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/a8ff6c9514c35c853b350382534fb624.png"
            },
            "scopes": [
              "refresh_token",
              "full"
            ],
            "service_name": "salesforce",
            "service_version": 1
          },
          "properties": {
            "fields": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "NetSuite_ID__c"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-15.renewalSteps.items[0].subscription.id"
                    }
                  }
                }
              ]
            },
            "object": {
              "type": "string",
              "value": "Opportunity"
            },
            "object_id": {
              "type": "jsonpath",
              "value": "$.steps.salesforce-1.records[0].Id"
            }
          }
        },
        "boolean-condition-13": {
          "title": "Should change quotes link?",
          "description": "Only need to change if a subscription existed before that was deleted.",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.script-20.result.shouldChangeQuotes"
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "==="
                    },
                    "value2": {
                      "type": "boolean",
                      "value": true
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "storage-14": {
          "title": "Get Created Sub Id",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "get",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Current Run"
            },
            "key": {
              "type": "string",
              "value": "createdSubscriptionId"
            },
            "default_value": {
              "type": "null",
              "value": null
            }
          }
        },
        "terminate-2": {
          "title": "Terminate",
          "connector": {
            "name": "terminate",
            "version": "1.1"
          },
          "operation": "fail_run",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "message": {
              "type": "string",
              "value": "Renewal order {$.steps.netsuite-14.response.body.content.changeOrderId} was created, but NS failed to create a renewal subscription. NS error:  {$.steps.netsuite-15.renewalSteps.items[0].error or:'No error reported'}."
            }
          }
        },
        "script-8": {
          "title": "Get Created Subscription Id",
          "description": "After creating a Subscription we get the URL only. We need to extract Id out of it or use the old Id.",
          "connector": {
            "name": "script",
            "version": "3.0"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "url"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-6.url",
                      "fallback": {
                        "type": "null",
                        "value": null
                      }
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "// Either extract id from the url of the created subscription\nexports.step = function(input) {\n  const regex = /\\/subscription\\/(?<id>.+)/;\n  return input.url.match(regex).groups.id;\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "script-15": {
          "title": "Get One Time/Quarterly Options",
          "description": "Choose values based on the line type, One Time or Recurring.",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "result": {
                "type": "object",
                "properties": {
                  "repeatevery": {
                    "type": "number"
                  },
                  "frequency": {
                    "type": "string"
                  },
                  "revrecoption": {
                    "type": "string"
                  }
                }
              },
              "console": {
                "type": "array",
                "items": {}
              }
            }
          },
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "chargeType"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.loop-1.value.SBQQ__Product__r.SBQQ__ChargeType__c"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "frequency"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.data-mapper-1.result"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "revrecoption"
                    },
                    "value": {
                      "type": "string",
                      "value": "OVER_TERM"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "\nexports.step = function (input) {\n    if (input.chargeType === 'One-Time') { // Correct 'repeat every' for the One-Time lines\n        return {\n            repeatevery: 0,\n            frequency: 'ONETIME',\n            revrecoption: 'ONE_TIME',\n            linetype: 1,\n        }\n    }\n    if(input.frequency === 'QUARTERLY'){ // Correct frequency and 'repeat every' for Quarterly frequency\n    \treturn {\n        repeatevery: 3,\n        frequency: 'MONTHLY',\n        revrecoption: input.revrecoption,\n        linetype: 2,\n    \t};\n    }\n    return {\n        repeatevery: 1,\n        frequency: input.frequency,\n        revrecoption: input.revrecoption,\n        linetype: 2,\n    };\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "salesforce-1": {
          "title": "Get SF Opportunity",
          "description": "Retrieve the fields needed",
          "connector": {
            "name": "salesforce",
            "version": "8.6"
          },
          "operation": "find_records",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "total": {
                "type": "integer",
                "title": "Total count"
              },
              "next_page_offset": {
                "type": "string",
                "title": "Next page offset"
              },
              "records": {
                "title": "Opportunities",
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "Opportunity",
                  "properties": {
                    "Id": {
                      "name": "Id",
                      "type": "string",
                      "title": "Opportunity ID"
                    },
                    "Opportunity_Term__c": {
                      "name": "Opportunity_Term__c",
                      "type": "number",
                      "title": "Opportunity Term"
                    },
                    "CurrencyIsoCode": {
                      "name": "CurrencyIsoCode",
                      "type": "string",
                      "title": "Opportunity Currency"
                    },
                    "Success_Level__c": {
                      "name": "Success_Level__c",
                      "type": "string",
                      "title": "Success Level"
                    },
                    "Product__c": {
                      "name": "Product__c",
                      "type": "string",
                      "title": "Product Family"
                    },
                    "Parent_Subscription_ID__c": {
                      "name": "Parent_Subscription_ID__c",
                      "type": "string",
                      "title": "Parent Subscription ID"
                    },
                    "NetSuite_ID__c": {
                      "name": "NetSuite_ID__c",
                      "type": "string",
                      "title": "NetSuite ID"
                    },
                    "SBQQ__PrimaryQuote__c": {
                      "name": "SBQQ__PrimaryQuote__c",
                      "type": "string",
                      "title": "Primary Quote"
                    },
                    "Manual_O2C__c": {
                      "name": "Manual_O2C__c",
                      "type": "boolean",
                      "title": "Manual O2C"
                    },
                    "Type": {
                      "name": "Type",
                      "type": "string",
                      "title": "Opportunity Type"
                    }
                  }
                }
              }
            }
          },
          "error_handling": {},
          "authentication": {
            "group": "2c440ec0-5ac6-4a09-aef3-d861faa8c602",
            "title": "SF-Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/a8ff6c9514c35c853b350382534fb624.png"
            },
            "scopes": [
              "refresh_token",
              "full"
            ],
            "service_name": "salesforce",
            "service_version": 1
          },
          "properties": {
            "object": {
              "type": "string",
              "value": "Opportunity"
            },
            "fields": {
              "type": "array",
              "value": [
                {
                  "type": "string",
                  "value": "Id"
                },
                {
                  "type": "string",
                  "value": "SBQQ__PrimaryQuote__r.SBQQ__StartDate__c"
                },
                {
                  "type": "string",
                  "value": "Opportunity_Term__c"
                },
                {
                  "type": "string",
                  "value": "CurrencyIsoCode"
                },
                {
                  "type": "string",
                  "value": "Success_Level__c"
                },
                {
                  "type": "string",
                  "value": "Product__c"
                },
                {
                  "type": "string",
                  "value": "Parent_Subscription_ID__c"
                },
                {
                  "type": "string",
                  "value": "NetSuite_ID__c"
                },
                {
                  "type": "string",
                  "value": "SBQQ__PrimaryQuote__c"
                },
                {
                  "type": "string",
                  "value": "Account.NetSuite_ID__c"
                },
                {
                  "type": "string",
                  "value": "SBQQ__PrimaryQuote__r.SBQQ__BillingFrequency__c"
                },
                {
                  "type": "string",
                  "value": "Owner.Name"
                },
                {
                  "type": "string",
                  "value": "Manual_O2C__c"
                },
                {
                  "type": "string",
                  "value": "Product_Configuration__r.Processed_via_OTC__c"
                },
                {
                  "type": "string",
                  "value": "Owner.NetSuite_ID__c"
                },
                {
                  "type": "string",
                  "value": "Type"
                },
                {
                  "type": "string",
                  "value": "SBQQ__PrimaryQuote__r.NetSuite_ID__c"
                }
              ]
            },
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "field": {
                      "type": "string",
                      "value": "SBQQ__PrimaryQuote__c"
                    },
                    "operator": {
                      "type": "string",
                      "value": "Equal to"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.trigger.data.opportunityId"
                    }
                  }
                }
              ]
            },
            "conditions_type": {
              "type": "string",
              "value": "Match all conditions"
            },
            "include_all_fields": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "netsuite-20": {
          "title": "Get Created Subscription",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "get_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "record_type": {
              "type": "string",
              "value": "subscription"
            },
            "record_id": {
              "type": "jsonpath",
              "value": "$.steps.netsuite-15.renewalSteps.items[0].subscription.id"
            },
            "expand_sub_resources": {
              "value": true,
              "type": "boolean"
            }
          }
        },
        "netsuite-22": {
          "title": "Change quotes link",
          "description": "Call restlet to change quotes link. Not possible to do via rest and soap is not reliable. As we also already have this method in the api, the method was exposed to calls from here.",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "raw_http_request",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "status_code": {
                    "type": "number"
                  },
                  "headers": {
                    "type": "object",
                    "properties": {
                      "x-n-operationid": {
                        "type": "string"
                      },
                      "ns_rtimer_composite": {
                        "type": "string"
                      },
                      "strict-transport-security": {
                        "type": "string"
                      },
                      "content-type": {
                        "type": "string"
                      },
                      "pragma": {
                        "type": "string"
                      },
                      "cache-control": {
                        "type": "string"
                      },
                      "expires": {
                        "type": "string"
                      },
                      "content-length": {
                        "type": "string"
                      },
                      "p3p": {
                        "type": "string"
                      },
                      "vary": {
                        "type": "string"
                      },
                      "date": {
                        "type": "string"
                      },
                      "connection": {
                        "type": "string"
                      },
                      "set-cookie": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "akamai-grn": {
                        "type": "string"
                      }
                    }
                  },
                  "body": {
                    "type": "object",
                    "properties": {
                      "content": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "method": {
              "type": "string",
              "value": "POST"
            },
            "include_raw_body": {
              "type": "boolean",
              "value": false
            },
            "parse_response": {
              "type": "string",
              "value": "true"
            },
            "url": {
              "type": "object",
              "value": {
                "full_url": {
                  "type": "jsonpath",
                  "value": "$.steps.script-20.result.url"
                }
              }
            },
            "body": {
              "type": "object",
              "value": {
                "raw": {
                  "type": "jsonpath",
                  "value": "$.steps.script-20.result.payload"
                }
              }
            }
          }
        },
        "script-12": {
          "title": "SuiteQL get subscription name",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "customer"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.call-workflow-3.response.customer"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "startDate"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-1.records[0].SBQQ__PrimaryQuote__r.SBQQ__StartDate__c"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "endUser"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.call-workflow-3.response.endUser",
                      "fallback": {
                        "type": "null",
                        "value": null
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "opportunityType"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-1.records[0].Type"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "exports.step = function(input) {\n  let name = getNameFromCustomer(input.customer)\n  if (input.endUser){\n    name += `(${getNameFromCustomer(input.endUser)})`;\n  }\n  // subscription name can have max of 50 characters\n  // and 16 for # date Renew that is added\n  name = escapeQuote(name.substring(0, 34));\n  const dateParts = input.startDate.split('-');\n  const renewStr = input.opportunityType == 'Renewal' ? ' Renew' : '';\n\tname = `${name}%${dateParts[1]}-${dateParts[0]}${renewStr}`;\n  return {\n    q: `SELECT id, name FROM subscription WHERE name like '${name}'`\n  };\n}\n\nfunction getNameFromCustomer(customer){\n  return customer.isPerson ? \n    [customer.firstName, customer.middleName, customer.lastName]\n\t\t.filter(f=>Boolean(f)) // filter out empty fields\n\t\t.join(' ')\n  \t: customer.companyName;\n}\n\nfunction escapeQuote(str) {\n    return str.replace(/'/g, \"''\");\n}"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "netsuite-19": {
          "title": "Update autorenewal on parent",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "update_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "record_type": {
              "type": "string",
              "value": "Subscription"
            },
            "record_id": {
              "type": "jsonpath",
              "value": "$.steps.salesforce-1.records[0].Parent_Subscription_ID__c"
            },
            "writable_record_fields": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "autoRenewal"
                    },
                    "value": {
                      "type": "boolean",
                      "value": false
                    }
                  }
                }
              ]
            }
          }
        },
        "boolean-condition-6": {
          "title": "Renewal success?",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-15.renewalSteps.items[0].status.id"
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "==="
                    },
                    "value2": {
                      "type": "string",
                      "value": "SUCCESS"
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "netsuite-14": {
          "title": "Create renewal order",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "raw_http_request",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "status_code": {
                    "type": "number"
                  },
                  "headers": {
                    "type": "object",
                    "properties": {
                      "x-n-operationid": {
                        "type": "string"
                      },
                      "ns_rtimer_composite": {
                        "type": "string"
                      },
                      "strict-transport-security": {
                        "type": "string"
                      },
                      "content-type": {
                        "type": "string"
                      },
                      "pragma": {
                        "type": "string"
                      },
                      "cache-control": {
                        "type": "string"
                      },
                      "expires": {
                        "type": "string"
                      },
                      "content-length": {
                        "type": "string"
                      },
                      "p3p": {
                        "type": "string"
                      },
                      "vary": {
                        "type": "string"
                      },
                      "date": {
                        "type": "string"
                      },
                      "connection": {
                        "type": "string"
                      },
                      "set-cookie": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "akamai-grn": {
                        "type": "string"
                      }
                    }
                  },
                  "body": {
                    "type": "object",
                    "properties": {
                      "content": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "method": {
              "type": "string",
              "value": "POST"
            },
            "include_raw_body": {
              "type": "boolean",
              "value": false
            },
            "parse_response": {
              "type": "string",
              "value": "true"
            },
            "url": {
              "type": "object",
              "value": {
                "full_url": {
                  "type": "jsonpath",
                  "value": "$.steps.script-18.result.url"
                }
              }
            },
            "body": {
              "type": "object",
              "value": {
                "raw": {
                  "type": "jsonpath",
                  "value": "$.steps.script-18.result.payload"
                }
              }
            }
          }
        },
        "script-19": {
          "title": "Is related to NS sub plan",
          "description": "Check if the SF product is related to NS subscription plan or not: true if the product code contains 5 or 6 sub-codes; else, false.",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "productCode"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.loop-2.value.SBQQ__Product__r.ProductCode"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "productOption"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.loop-2.value.SBQQ__ProductOption__c",
                      "fallback": {
                        "type": "null",
                        "value": null
                      }
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "// the subscription plan is the main bundle, so, it's not a product option and\n// must have code with 5 or 6 parts\n// we should have only one main bundle for opportunities processed by automation\nexports.step = function(input, fileInput) {\n    const subCodes = input.productCode.split('-');\n    return !input.productOption && (subCodes.length === 5 || subCodes.length === 6);\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "storage-13": {
          "title": "Save Created Sub Id",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "set",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Current Run"
            },
            "key": {
              "type": "string",
              "value": "createdSubscriptionId"
            },
            "value": {
              "type": "jsonpath",
              "value": "$.steps.script-8.result"
            }
          }
        },
        "date-time-helpers-1": {
          "title": "Get Subscription Term",
          "connector": {
            "name": "date-time-helpers",
            "version": "3.0"
          },
          "operation": "get_days_between",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "date1": {
              "type": "jsonpath",
              "value": "$.steps.netsuite-2.startDate"
            },
            "date2": {
              "type": "jsonpath",
              "value": "$.steps.netsuite-2.endDate"
            }
          }
        },
        "loop-2": {
          "title": "Loop SF quote lines",
          "description": "Loop through quote lines to determine the main product",
          "connector": {
            "name": "loop",
            "version": "1.1"
          },
          "operation": "loop_array",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "value": {
                "type": "object",
                "title": "Quote Line",
                "properties": {
                  "SBQQ__StartDate__c": {
                    "name": "SBQQ__StartDate__c",
                    "type": "string",
                    "title": "Start Date"
                  },
                  "SBQQ__EndDate__c": {
                    "name": "SBQQ__EndDate__c",
                    "type": "string",
                    "title": "End Date"
                  },
                  "SBQQ__Product__c": {
                    "name": "SBQQ__Product__c",
                    "type": "string",
                    "title": "Product"
                  },
                  "SBQQ__Quantity__c": {
                    "name": "SBQQ__Quantity__c",
                    "type": "number",
                    "title": "Quantity"
                  },
                  "Id": {
                    "name": "Id",
                    "type": "string",
                    "title": "Record ID"
                  },
                  "SBQQ__BillingFrequency__c": {
                    "name": "SBQQ__BillingFrequency__c",
                    "type": "string",
                    "title": "Billing Frequency"
                  },
                  "SBQQ__NetPrice__c": {
                    "name": "SBQQ__NetPrice__c",
                    "type": "number",
                    "title": "Net Unit Price"
                  },
                  "SBQQ__NetTotal__c": {
                    "name": "SBQQ__NetTotal__c",
                    "type": "number",
                    "title": "Net Total"
                  },
                  "SBQQ__ProductOption__c": {
                    "name": "SBQQ__ProductOption__c",
                    "type": "string",
                    "title": "Product Option"
                  },
                  "SBQQ__Bundle__c": {
                    "name": "SBQQ__Bundle__c",
                    "type": "boolean",
                    "title": "Package"
                  }
                }
              },
              "count": {
                "type": "number"
              },
              "index": {
                "type": "number"
              },
              "is_first": {
                "type": "boolean"
              },
              "is_last": {
                "type": "boolean"
              },
              "branch_name": {
                "type": "string"
              }
            }
          },
          "error_handling": {},
          "properties": {
            "array": {
              "type": "jsonpath",
              "value": "$.steps.salesforce-2.records"
            }
          }
        },
        "storage-1": {
          "title": "Format a Price Interval",
          "description": "Add price interval information for the line",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "append_to_list",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Current Run"
            },
            "key": {
              "type": "string",
              "value": "priceInterval"
            },
            "value": {
              "type": "object",
              "value": {
                "subscriptionPlanLineNumber": {
                  "type": "jsonpath",
                  "value": "$.steps.storage-4.value.lineNumber",
                  "fallback": {
                    "value": null,
                    "type": "null"
                  }
                },
                "quantity": {
                  "type": "jsonpath",
                  "value": "$.steps.loop-1.value.SBQQ__Quantity__c"
                },
                "repeatEvery": {
                  "type": "jsonpath",
                  "value": "$.steps.script-11.result.repeatevery"
                },
                "frequency": {
                  "type": "jsonpath",
                  "value": "$.steps.script-11.result.frequency"
                },
                "startDate": {
                  "type": "jsonpath",
                  "value": "$.steps.salesforce-1.records[0].SBQQ__PrimaryQuote__r.SBQQ__StartDate__c"
                },
                "totalintervalvalue": {
                  "type": "jsonpath",
                  "value": "$.steps.loop-1.value.SBQQ__NetTotal__c",
                  "fallback": {
                    "type": "number",
                    "value": 0
                  }
                },
                "item": {
                  "type": "jsonpath",
                  "value": "$.steps.loop-1.value.SBQQ__Product__r.NetSuite_ID__c"
                },
                "lineNumber": {
                  "type": "jsonpath",
                  "value": "$.steps.storage-4.value.lineNumber"
                }
              }
            },
            "create_if_missing": {
              "type": "boolean",
              "value": true
            }
          }
        },
        "boolean-condition-9": {
          "title": "Sales rep Netsuite Id set?",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-1.records[0].Owner.NetSuite_ID__c",
                      "fallback": {
                        "type": "null",
                        "value": null
                      }
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "!=="
                    },
                    "value2": {
                      "type": "null",
                      "value": null
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "netsuite-10": {
          "title": "Get NS Item Details",
          "description": "Get the Support Level field which is not on the Plan, but on the Item itself.",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "get_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "record_type": {
              "type": "string",
              "value": "nonInventorySaleItem"
            },
            "record_id": {
              "type": "jsonpath",
              "value": "$.steps.loop-5.value.item.id"
            },
            "expand_sub_resources": {
              "type": "boolean",
              "value": true
            }
          }
        },
        "netsuite-1": {
          "title": "Delete draft subscription",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "raw_http_request",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "status_code": {
                    "type": "number"
                  },
                  "headers": {
                    "type": "object",
                    "properties": {
                      "x-n-operationid": {
                        "type": "string"
                      },
                      "ns_rtimer_composite": {
                        "type": "string"
                      },
                      "strict-transport-security": {
                        "type": "string"
                      },
                      "content-type": {
                        "type": "string"
                      },
                      "pragma": {
                        "type": "string"
                      },
                      "cache-control": {
                        "type": "string"
                      },
                      "expires": {
                        "type": "string"
                      },
                      "content-length": {
                        "type": "string"
                      },
                      "p3p": {
                        "type": "string"
                      },
                      "vary": {
                        "type": "string"
                      },
                      "date": {
                        "type": "string"
                      },
                      "connection": {
                        "type": "string"
                      },
                      "set-cookie": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "akamai-grn": {
                        "type": "string"
                      }
                    }
                  },
                  "body": {
                    "type": "object",
                    "properties": {
                      "content": {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "method": {
              "type": "string",
              "value": "POST"
            },
            "include_raw_body": {
              "type": "boolean",
              "value": false
            },
            "parse_response": {
              "type": "string",
              "value": "true"
            },
            "url": {
              "type": "object",
              "value": {
                "full_url": {
                  "type": "jsonpath",
                  "value": "$.steps.script-7.result.url"
                }
              }
            },
            "body": {
              "type": "object",
              "value": {
                "raw": {
                  "type": "jsonpath",
                  "value": "$.steps.script-7.result.payload"
                }
              }
            }
          }
        },
        "script-5": {
          "title": "Get payload to change to draft",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "lines"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-12.subscriptionLine.items"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "exports.step = function(input) {\n  const notIncludedLines = input.lines.filter(i => i.status.id === 'NOT_INCLUDED');\n  if (notIncludedLines.length === 0) {\n    throw new Error('Subscription is not included and without lines to include. Need to be handled manually.');\n  }\n  const lines = notIncludedLines.map(i => {\n    return {\n      \"linenumber\": i.lineNumber,\n      \"isIncluded\": true,\n      \"status\": 'DRAFT'\n    }\n  })\n  return {\n    items: lines\n  }\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "callable-workflow-response-4": {
          "title": "Sync Not Enabled",
          "connector": {
            "name": "callable-workflow-response",
            "version": "1.0"
          },
          "operation": "response",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "response": {
              "type": "object",
              "value": {
                "opportunityId": {
                  "type": "string",
                  "value": ""
                },
                "message": {
                  "type": "string",
                  "value": "Not enabled for the product."
                },
                "WasSyncEnabled": {
                  "value": false,
                  "type": "boolean"
                }
              }
            }
          }
        },
        "script-11": {
          "title": "Get One Time/Quarterly Options",
          "description": "Choose values based on the line type, One Time or Recurring.",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "result": {
                "type": "object",
                "properties": {
                  "repeatevery": {
                    "type": "number"
                  },
                  "frequency": {
                    "type": "string"
                  },
                  "revrecoption": {
                    "type": "string"
                  }
                }
              },
              "console": {
                "type": "array",
                "items": {}
              }
            }
          },
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "lineType"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.storage-4.value.subscriptionLineType.refName"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "frequency"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.data-mapper-1.result"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "revrecoption"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.storage-4.value.revRecOption.id"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "\nexports.step = function (input) {\n    if (input.lineType === 'One Time') { // Correct 'repeat every' for the One-Time lines\n        return {\n            repeatevery: 0,\n            frequency: 'ONETIME',\n            revrecoption: 'ONE_TIME'\n        }\n    }\n    if(input.frequency === 'QUARTERLY'){ // Correct frequency and 'repeat every' for Quarterly frequency\n    \treturn {\n        repeatevery: 3,\n        frequency: 'MONTHLY',\n        revrecoption: input.revrecoption\n    \t};\n    }\n    return {\n        repeatevery: 1,\n        frequency: input.frequency,\n        revrecoption: input.revrecoption\n    };\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "terminate-4": {
          "title": "Terminate",
          "connector": {
            "name": "terminate",
            "version": "1.1"
          },
          "operation": "fail_run",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "message": {
              "type": "string",
              "value": "Subscription term cannot be found."
            }
          }
        },
        "salesforce-2": {
          "title": "Get Primary Quote Lines",
          "description": "Retrieve from SF all Subscriptions related to the Contract",
          "connector": {
            "name": "salesforce",
            "version": "8.6"
          },
          "operation": "find_records",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "total": {
                "type": "integer",
                "title": "Total count"
              },
              "next_page_offset": {
                "type": "string",
                "title": "Next page offset"
              },
              "records": {
                "title": "Quote Lines",
                "type": "array",
                "items": {
                  "type": "object",
                  "title": "Quote Line",
                  "properties": {
                    "SBQQ__StartDate__c": {
                      "name": "SBQQ__StartDate__c",
                      "type": "string",
                      "title": "Start Date"
                    },
                    "SBQQ__EndDate__c": {
                      "name": "SBQQ__EndDate__c",
                      "type": "string",
                      "title": "End Date"
                    },
                    "SBQQ__Product__c": {
                      "name": "SBQQ__Product__c",
                      "type": "string",
                      "title": "Product"
                    },
                    "SBQQ__Quantity__c": {
                      "name": "SBQQ__Quantity__c",
                      "type": "number",
                      "title": "Quantity"
                    },
                    "Id": {
                      "name": "Id",
                      "type": "string",
                      "title": "Record ID"
                    },
                    "SBQQ__BillingFrequency__c": {
                      "name": "SBQQ__BillingFrequency__c",
                      "type": "string",
                      "title": "Billing Frequency"
                    },
                    "SBQQ__NetPrice__c": {
                      "name": "SBQQ__NetPrice__c",
                      "type": "number",
                      "title": "Net Unit Price"
                    },
                    "SBQQ__NetTotal__c": {
                      "name": "SBQQ__NetTotal__c",
                      "type": "number",
                      "title": "Net Total"
                    },
                    "SBQQ__ProductOption__c": {
                      "name": "SBQQ__ProductOption__c",
                      "type": "string",
                      "title": "Product Option"
                    },
                    "SBQQ__Bundle__c": {
                      "name": "SBQQ__Bundle__c",
                      "type": "boolean",
                      "title": "Package"
                    }
                  }
                }
              }
            }
          },
          "error_handling": {},
          "authentication": {
            "group": "2c440ec0-5ac6-4a09-aef3-d861faa8c602",
            "title": "SF-Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/a8ff6c9514c35c853b350382534fb624.png"
            },
            "scopes": [
              "refresh_token",
              "full"
            ],
            "service_name": "salesforce",
            "service_version": 1
          },
          "properties": {
            "object": {
              "type": "string",
              "value": "SBQQ__QuoteLine__c"
            },
            "fields": {
              "type": "array",
              "value": [
                {
                  "type": "string",
                  "value": "SBQQ__StartDate__c"
                },
                {
                  "type": "string",
                  "value": "SBQQ__EndDate__c"
                },
                {
                  "type": "string",
                  "value": "SBQQ__Product__c"
                },
                {
                  "type": "string",
                  "value": "SBQQ__Quantity__c"
                },
                {
                  "type": "string",
                  "value": "SBQQ__Product__r.NetSuite_ID__c"
                },
                {
                  "type": "string",
                  "value": "SBQQ__Product__r.NetSuite_SubscriptionPlan_ID__c"
                },
                {
                  "type": "string",
                  "value": "SBQQ__Product__r.Product_Edition__c"
                },
                {
                  "type": "string",
                  "value": "Id"
                },
                {
                  "type": "string",
                  "value": "SBQQ__BillingFrequency__c"
                },
                {
                  "type": "string",
                  "value": "SBQQ__NetPrice__c"
                },
                {
                  "type": "string",
                  "value": "SBQQ__Product__r.ProductCode"
                },
                {
                  "type": "string",
                  "value": "SBQQ__NetTotal__c"
                },
                {
                  "type": "string",
                  "value": "SBQQ__Product__r.SBQQ__ChargeType__c"
                },
                {
                  "type": "string",
                  "value": "SBQQ__ProductOption__c"
                },
                {
                  "type": "string",
                  "value": "SBQQ__Bundle__c"
                }
              ]
            },
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "field": {
                      "type": "string",
                      "value": "SBQQ__Quote__c"
                    },
                    "operator": {
                      "type": "string",
                      "value": "Equal to"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-1.records[0].SBQQ__PrimaryQuote__c"
                    }
                  }
                }
              ]
            },
            "conditions_type": {
              "type": "string",
              "value": "Match all conditions"
            },
            "include_all_fields": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "break-loop-1": {
          "title": "Break Loop",
          "connector": {
            "name": "break-loop",
            "version": "1.1"
          },
          "operation": "break",
          "output_schema": {},
          "error_handling": {},
          "properties": {}
        },
        "storage-6": {
          "title": "Get NS Price Interval Array",
          "description": "Get the Price Intervals array we just constructed,",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "get",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Current Run"
            },
            "default_value": {
              "type": "null",
              "value": null
            },
            "key": {
              "type": "string",
              "value": "priceInterval"
            }
          }
        },
        "terminate-3": {
          "title": "Terminate",
          "connector": {
            "name": "terminate",
            "version": "1.1"
          },
          "operation": "fail_run",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "message": {
              "type": "string",
              "value": "Netsuite id not set for the opportunity owner({$.steps.salesforce-1.records[0].Owner.Name})."
            }
          }
        },
        "boolean-condition-14": {
          "title": "Has Parent?",
          "description": "New Business and Upsell don't have parent",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-1.records[0].Parent_Subscription_ID__c",
                      "fallback": {
                        "type": "null",
                        "value": null
                      }
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "!=="
                    },
                    "value2": {
                      "type": "null",
                      "value": null
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "script-9": {
          "title": "Generate Renewal Lines",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "subscriptionLines"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-11.subscriptionLine.items"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "// Convert subscription lines to renewal plan lines\nexports.step = function(input, fileInput) {\n  let items = [];\n  for (let i = 0; i < input.subscriptionLines.length; i++) {\n    let subline = input.subscriptionLines[i];\n    if (subline.status.id != 'ACTIVE'\n      || !subline.includeInRenewal\n      || subline.subscriptionLineType.refName !== 'Recurring') {\n      // Skip lines which are not in renewal\n      continue;\n    }\n    let renewline = {\n      \"apply\": true,\n      \"includeInRenewal\": true,\n      \"sequence\": subline.lineNumber\n    };\n    items.push(renewline);\n  }\n  return {\n    items\n  };\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "netsuite-6": {
          "title": "Create a NS Subscription",
          "description": "Pass all the data to a new Subscription",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "create_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "record_type": {
              "type": "string",
              "value": "Subscription"
            },
            "writable_record_fields": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "customer"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.call-workflow-3.response.customer.id"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "subscriptionPlan"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-5.id"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "priceBook"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-8.items[0].id"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "initialTerm"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-4.response.body.items[0].id"
                    }
                  }
                },
                {
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "subscriptionLine"
                    },
                    "value": {
                      "type": "object",
                      "value": {
                        "items": {
                          "type": "jsonpath",
                          "value": "$.steps.script-2.result.lines"
                        }
                      }
                    }
                  },
                  "type": "object"
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "priceInterval"
                    },
                    "value": {
                      "type": "object",
                      "value": {
                        "items": {
                          "type": "jsonpath",
                          "value": "$.steps.script-2.result.prices"
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "startDate"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-1.records[0].SBQQ__PrimaryQuote__r.SBQQ__StartDate__c"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "billingAccount"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.call-workflow-2.response.billingAccountId",
                      "fallback": {
                        "type": "string"
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "custrecord_subs_end_user"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-1.records[0].Account.NetSuite_ID__c"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "custrecord_subs_distributor"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.script-4.result.distributor",
                      "fallback": {
                        "type": "null",
                        "value": null
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "custrecord_subs_reseller"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.script-4.result.reseller",
                      "fallback": {
                        "type": "null",
                        "value": null
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "custrecord_parent_subscription"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-1.records[0].Parent_Subscription_ID__c",
                      "fallback": {
                        "type": "null",
                        "value": null
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "currency"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-16.response.body.items[0].id"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "name"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.script-10.result"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "custrecord_sales_team"
                    },
                    "value": {
                      "type": "number",
                      "value": 1
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "custrecord_subscription_salesrep"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.salesforce-1.records[0].Owner.NetSuite_ID__c",
                      "fallback": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            }
          }
        },
        "script-14": {
          "title": "Check Currency",
          "description": "Check if the customer has the currency already at the Finance->Currencies tab",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "customer"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.call-workflow-3.response.customer"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "currency"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-16.response.body.items[0].id"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "exports.step = function(input) {\n\treturn !!input.customer.currencyList.items.find(f=>f.currency.id === input.currency);\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "netsuite-21": {
          "title": "Mark Not Included",
          "description": "Mark as 'Not included' the products which are not in the Salesforce qutoe",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "update_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "record_type": {
              "type": "string",
              "value": "Subscription"
            },
            "record_id": {
              "type": "jsonpath",
              "value": "$.steps.netsuite-15.renewalSteps.items[0].subscription.id"
            },
            "writable_record_fields": {
              "type": "array",
              "value": [
                {
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "subscriptionLine"
                    },
                    "value": {
                      "type": "object",
                      "value": {
                        "items": {
                          "type": "jsonpath",
                          "value": "$.steps.script-17.result"
                        }
                      }
                    }
                  },
                  "type": "object"
                }
              ]
            }
          }
        },
        "netsuite-7": {
          "title": "Update renewal plan",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "update_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "record_type": {
              "type": "string",
              "value": "Subscription"
            },
            "record_id": {
              "type": "jsonpath",
              "value": "$.steps.salesforce-1.records[0].Parent_Subscription_ID__c"
            },
            "writable_record_fields": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "defaultRenewalPlan"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-5.id"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "defaultRenewalPriceBook"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-8.items[0].id"
                    }
                  }
                }
              ]
            }
          }
        },
        "netsuite-18": {
          "title": "Add Currency",
          "description": "The PATCH REST API request will only add the currency, we do not need to add all the other currencies",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "update_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "record_type": {
              "type": "string",
              "value": "customer"
            },
            "record_id": {
              "type": "jsonpath",
              "value": "$.steps.call-workflow-3.response.customer.id"
            },
            "writable_record_fields": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "currencyList"
                    },
                    "value": {
                      "type": "object",
                      "value": {
                        "items": {
                          "type": "array",
                          "value": [
                            {
                              "type": "object",
                              "value": {
                                "currency": {
                                  "type": "object",
                                  "value": {
                                    "id": {
                                      "type": "jsonpath",
                                      "value": "$.steps.netsuite-16.response.body.items[0].id"
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        },
        "script-2": {
          "title": "Set Line Numbers",
          "description": "Set line numbers for the lines missing in the original subscription plan",
          "connector": {
            "name": "script",
            "version": "3.0"
          },
          "operation": "execute",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "result": {
                "type": "object",
                "properties": {
                  "lines": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "revrecoption": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "isIncluded": {
                          "type": "boolean"
                        },
                        "subscriptionlinetype": {
                          "type": [
                            "string",
                            "number"
                          ]
                        },
                        "department": {
                          "type": "string"
                        },
                        "status": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          }
                        },
                        "item": {
                          "type": "string"
                        },
                        "class": {
                          "type": "string"
                        },
                        "lineNumber": {
                          "type": "number"
                        },
                        "billingmode": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "required": [
                        "revrecoption",
                        "item",
                        "billingmode",
                        "lineNumber",
                        "department",
                        "class",
                        "subscriptionlinetype",
                        "isIncluded",
                        "status"
                      ]
                    }
                  },
                  "prices": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "repeatEvery": {
                          "type": "number"
                        },
                        "subscriptionPlanLineNumber": {
                          "type": [
                            "number",
                            "null"
                          ]
                        },
                        "totalintervalvalue": {
                          "type": "number"
                        },
                        "quantity": {
                          "type": "number"
                        },
                        "startDate": {
                          "type": "string"
                        },
                        "status": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          }
                        },
                        "frequency": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          }
                        },
                        "linenumber": {
                          "type": [
                            "number",
                            "null"
                          ]
                        },
                        "lineNumber": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "linenumber",
                        "quantity",
                        "repeatEvery",
                        "subscriptionPlanLineNumber",
                        "totalintervalvalue",
                        "startDate",
                        "status",
                        "frequency",
                        "lineNumber"
                      ]
                    }
                  }
                }
              },
              "console": {
                "type": "array",
                "items": {}
              }
            }
          },
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "lines"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.storage-3.value"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "prices"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.storage-6.value"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "plan"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-5"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "exports.step = function (input, fileInput) {\n  console.log(\"plan.items count\", input.plan.member.items.length);\n  let max = input.plan.member.items.length;\n  for (var i = 0; i < input.lines.length; i++) {\n    if (input.lines[i].lineNumber == null) {\n      max++;\n      input.lines[i].lineNumber = max;\n      input.prices[i].lineNumber = max;\n      input.prices[i].subscriptionPlanLineNumber = max;\n    }\n  }\n  return {\n    \"prices\": input.prices,\n    \"lines\": input.lines\n  };\n};\n"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "boolean-condition-3": {
          "title": "Is related to NS sub plan?",
          "description": "Continue only if the SF product is related to NS subscription plan.",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "comparison_type": {
                      "type": "string",
                      "value": "==="
                    },
                    "is_case_sensitive": {
                      "type": "boolean",
                      "value": false
                    },
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.script-19.result"
                    },
                    "value2": {
                      "type": "boolean",
                      "value": true
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "boolean-condition-10": {
          "title": "No Currency?",
          "description": "Customer does not have the currency, we have to add it",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.script-14.result"
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "==="
                    },
                    "value2": {
                      "type": "boolean",
                      "value": false
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "callable-workflow-response-3": {
          "title": "Return Response",
          "connector": {
            "name": "callable-workflow-response",
            "version": "1.0"
          },
          "operation": "response",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "response": {
              "type": "object",
              "value": {
                "opportunityId": {
                  "type": "string",
                  "value": ""
                },
                "message": {
                  "type": "string",
                  "value": "Not possible to delete the draft subscription."
                },
                "WasSyncEnabled": {
                  "value": false,
                  "type": "boolean"
                },
                "subscription": {
                  "type": "string",
                  "value": ""
                }
              }
            }
          }
        },
        "trigger": {
          "title": "Call Flow for Quote",
          "description": "This flow gets a SF Contract Id and creates a Subscription based on it",
          "connector": {
            "name": "callable-trigger",
            "version": "2.0"
          },
          "operation": "trigger_and_respond",
          "output_schema": {},
          "error_handling": {},
          "properties": {}
        }
      },
      "dependencies": [
        {
          "id": "5b94881f-4352-4ac4-8ee9-ffe85036bfca",
          "name": "Error Notification"
        },
        {
          "id": "760a8711-27c6-4ba5-aab4-479042128cb8",
          "name": "Subflow activate and return NS customers"
        },
        {
          "id": "e96c1f66-536a-4e5c-8bd3-8a2375110837",
          "name": "Subflow Append Message to Description"
        },
        {
          "id": "ee2424ff-2259-4ee3-90c3-1dc66b8460d3",
          "name": "Subflow Get Billing Account"
        }
      ]
    }
  ],
  "projects": []
}