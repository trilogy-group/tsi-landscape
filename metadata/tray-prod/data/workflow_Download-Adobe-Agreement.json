 {
  "tray_export_version": 4,
  "export_type": "workflow",
  "workflows": [
    {
      "id": "a5f0ce04-5fb5-4d51-b638-1c5c1a82b794",
      "created": "2023-07-26T22:28:05.180171Z",
      "workspace_id": "d3800da2-85c2-4b09-83cb-f805e217d38a",
      "creator": "f21f100c-9e62-42e2-a744-061c18de134c",
      "version": {
        "id": "a6db1241-f7c1-490e-928f-921ed8e2dd41",
        "created": "2023-12-22T19:15:25.612021Z"
      },
      "title": "Download Adobe Agreement",
      "enabled": true,
      "tags": [],
      "settings": {
        "config": {
          "adobe_client_secret": "0LrEbnJzoI0CqSOBWybaN0tfS-aiYv6Y",
          "adobe_client_id": "CBJCHBCAABAAZhMEwmOr8K0NiqqytKFI0-MhsyWRcBfM",
          "adobe_refresh_token": "3AAABLblqZhDHzVYl6Ajx7Yvdg6jJvA45_0jyLxXkpj2krbc1UApYNrmFNX3sdYsXhrZrc8LjPS4*",
          "adobe_code": "CBNCKBAAHBCAABAAiBqz17wV4x6-_nzLzVKYiK0wAg7o-yaJ"
        },
        "alerting_workflow_id": "5b94881f-4352-4ac4-8ee9-ffe85036bfca",
        "input_schema": {
          "type": "object",
          "properties": {
            "netsuiteQuoteId": {
              "title": "Netsuite Quote Id",
              "type": "number"
            },
            "netsuiteAgreementId": {
              "title": "Netsuite Agreement Id",
              "type": "number"
            }
          },
          "additionalProperties": false,
          "required": [],
          "advanced": []
        },
        "output_schema": {
          "type": "object",
          "properties": {
            "success": {
              "title": "Success",
              "type": "boolean",
              "default": false
            },
            "file": {
              "title": "File",
              "type": "object",
              "properties": {},
              "additionalProperties": false,
              "required": [],
              "advanced": []
            }
          },
          "additionalProperties": false,
          "required": [],
          "advanced": []
        }
      },
      "steps_structure": [
        {
          "name": "trigger",
          "type": "normal",
          "content": {}
        },
        {
          "name": "boolean-condition-1",
          "type": "branch",
          "content": {
            "true": [
              {
                "name": "netsuite-1",
                "type": "normal",
                "content": {}
              },
              {
                "name": "boolean-condition-2",
                "type": "branch",
                "content": {
                  "true": [],
                  "false": [
                    {
                      "name": "callable-workflow-response-3",
                      "type": "normal",
                      "content": {}
                    }
                  ]
                }
              }
            ],
            "false": [
              {
                "name": "boolean-condition-5",
                "type": "branch",
                "content": {
                  "true": [
                    {
                      "name": "netsuite-2",
                      "type": "normal",
                      "content": {}
                    },
                    {
                      "name": "boolean-condition-6",
                      "type": "branch",
                      "content": {
                        "true": [],
                        "false": [
                          {
                            "name": "callable-workflow-response-5",
                            "type": "normal",
                            "content": {}
                          }
                        ]
                      }
                    }
                  ],
                  "false": [
                    {
                      "name": "callable-workflow-response-2",
                      "type": "normal",
                      "content": {}
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "loop-1",
          "type": "loop",
          "content": {
            "_loop": [
              {
                "name": "storage-1",
                "type": "normal",
                "content": {}
              },
              {
                "name": "storage-5",
                "type": "normal",
                "content": {}
              },
              {
                "name": "boolean-condition-4",
                "type": "branch",
                "content": {
                  "true": [
                    {
                      "name": "delay-1",
                      "type": "normal",
                      "content": {}
                    },
                    {
                      "name": "math-helpers-1",
                      "type": "normal",
                      "content": {}
                    },
                    {
                      "name": "storage-6",
                      "type": "normal",
                      "content": {}
                    }
                  ],
                  "false": [
                    {
                      "name": "storage-2",
                      "type": "normal",
                      "content": {}
                    },
                    {
                      "name": "break-loop-1",
                      "type": "break",
                      "content": {},
                      "target": "loop-1"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "http-client-1",
          "type": "normal",
          "content": {}
        },
        {
          "name": "http-client-2",
          "type": "normal",
          "content": {}
        },
        {
          "name": "boolean-condition-3",
          "type": "branch",
          "content": {
            "true": [],
            "false": [
              {
                "name": "storage-4",
                "type": "normal",
                "content": {}
              },
              {
                "name": "callable-workflow-response-4",
                "type": "normal",
                "content": {}
              }
            ]
          }
        },
        {
          "name": "http-client-3",
          "type": "normal",
          "content": {}
        },
        {
          "name": "storage-3",
          "type": "normal",
          "content": {}
        },
        {
          "name": "script-1",
          "type": "normal",
          "content": {}
        },
        {
          "name": "file-helpers-1",
          "type": "normal",
          "content": {}
        },
        {
          "name": "callable-workflow-response-1",
          "type": "normal",
          "content": {}
        }
      ],
      "steps": {
        "script-1": {
          "title": "Fix name",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "fileName"
                    },
                    "value": {
                      "type": "string",
                      "value": "{$.steps.http-client-2.response.body.agreementAssetsResults.agreementAssetsResultList[0].name}.pdf"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "exports.step = function(input) {\n\treturn input.fileName.replace(/\\//g, '_');\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "storage-2": {
          "title": "Set lock to true",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "set",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Workflow"
            },
            "key": {
              "type": "string",
              "value": "lockFlow"
            },
            "value": {
              "type": "boolean",
              "value": true
            }
          }
        },
        "netsuite-2": {
          "title": "Get external agreement id",
          "description": "Not getting draft because draft agreements are not in adobe yet",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "raw_http_request",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "status_code": {
                    "type": "number"
                  },
                  "headers": {
                    "type": "object",
                    "properties": {
                      "content-type": {
                        "type": "string"
                      },
                      "content-length": {
                        "type": "string"
                      },
                      "x-n-operationid": {
                        "type": "string"
                      },
                      "ns_rtimer_composite": {
                        "type": "string"
                      },
                      "strict-transport-security": {
                        "type": "string"
                      },
                      "pragma": {
                        "type": "string"
                      },
                      "cache-control": {
                        "type": "string"
                      },
                      "expires": {
                        "type": "string"
                      },
                      "x-netsuite-jobid": {
                        "type": "string"
                      },
                      "preference-applied": {
                        "type": "string"
                      },
                      "p3p": {
                        "type": "string"
                      },
                      "vary": {
                        "type": "string"
                      },
                      "date": {
                        "type": "string"
                      },
                      "connection": {
                        "type": "string"
                      },
                      "akamai-grn": {
                        "type": "string"
                      }
                    }
                  },
                  "body": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rel": {
                              "type": "string"
                            },
                            "href": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "count": {
                        "type": "number"
                      },
                      "hasMore": {
                        "type": "boolean"
                      },
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "type": "array",
                              "items": {}
                            },
                            "custrecord_echosign_external_id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "offset": {
                        "type": "number"
                      },
                      "totalResults": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          },
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "method": {
              "type": "string",
              "value": "POST"
            },
            "include_raw_body": {
              "type": "boolean",
              "value": false
            },
            "parse_response": {
              "type": "string",
              "value": "true"
            },
            "url": {
              "type": "object",
              "value": {
                "endpoint": {
                  "type": "string",
                  "value": "/services/rest/query/v1/suiteql"
                }
              }
            },
            "headers": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "prefer"
                    },
                    "value": {
                      "type": "string",
                      "value": "transient"
                    }
                  }
                }
              ]
            },
            "body": {
              "type": "object",
              "value": {
                "raw": {
                  "type": "object",
                  "value": {
                    "q": {
                      "type": "string",
                      "value": "SELECT a.custrecord_echosign_external_id FROM customrecord_echosign_agreement a\nWHERE id = {$.steps.trigger.data.netsuiteAgreementId}"
                    }
                  }
                }
              }
            }
          }
        },
        "boolean-condition-2": {
          "title": "Netsuite agreement found?",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-1.response.body.count"
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "!=="
                    },
                    "value2": {
                      "type": "number",
                      "value": 0
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "callable-workflow-response-1": {
          "title": "Callable response",
          "connector": {
            "name": "callable-workflow-response",
            "version": "1.0"
          },
          "operation": "response",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "response": {
              "value": {
                "success": {
                  "value": true,
                  "type": "boolean"
                },
                "file": {
                  "type": "jsonpath",
                  "value": "$.steps.file-helpers-1.file"
                }
              },
              "type": "object"
            }
          }
        },
        "storage-3": {
          "title": "Set lock to false",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "set",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Workflow"
            },
            "key": {
              "type": "string",
              "value": "lockFlow"
            },
            "value": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "boolean-condition-1": {
          "title": "Netsuite Quote Id informed?",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.trigger.data.netsuiteQuoteId",
                      "fallback": {
                        "value": null,
                        "type": "null"
                      }
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "!=="
                    },
                    "value2": {
                      "type": "null",
                      "value": null
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "http-client-1": {
          "title": "Get adobe token",
          "connector": {
            "name": "http-client",
            "version": "5.6"
          },
          "operation": "post_request",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "status_code": {
                    "type": "number"
                  },
                  "headers": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string"
                      },
                      "server": {
                        "type": "string"
                      },
                      "x-robots-tag": {
                        "type": "string"
                      },
                      "cache-control": {
                        "type": "string"
                      },
                      "pragma": {
                        "type": "string"
                      },
                      "strict-transport-security": {
                        "type": "string"
                      },
                      "x-xss-protection": {
                        "type": "string"
                      },
                      "x-content-type-options": {
                        "type": "string"
                      },
                      "p3p": {
                        "type": "string"
                      },
                      "connection": {
                        "type": "string"
                      },
                      "transfer-encoding": {
                        "type": "string"
                      },
                      "content-type": {
                        "type": "string"
                      }
                    }
                  },
                  "body": {
                    "type": "object",
                    "properties": {
                      "access_token": {
                        "type": "string"
                      },
                      "token_type": {
                        "type": "string"
                      },
                      "expires_in": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          },
          "error_handling": {},
          "properties": {
            "auth": {
              "type": "object",
              "value": {
                "none": {
                  "type": "null",
                  "value": null
                }
              }
            },
            "follow_redirect": {
              "type": "boolean",
              "value": false
            },
            "follow_keep_method": {
              "type": "boolean",
              "value": false
            },
            "reject_unauthorized": {
              "type": "boolean",
              "value": true
            },
            "follow_authorization_header": {
              "type": "boolean",
              "value": false
            },
            "parse_response": {
              "type": "string",
              "value": "true"
            },
            "status_code": {
              "type": "object",
              "value": {
                "range": {
                  "type": "object",
                  "value": {
                    "from": {
                      "type": "integer",
                      "value": 200
                    },
                    "to": {
                      "type": "integer",
                      "value": 299
                    }
                  }
                }
              }
            },
            "case_sensitive_headers": {
              "type": "boolean",
              "value": false
            },
            "url": {
              "type": "string",
              "value": "https://secure.na1.echosign.com/oauth/refresh"
            },
            "body": {
              "type": "object",
              "value": {
                "form_urlencoded": {
                  "type": "object",
                  "value": {
                    "client_secret": {
                      "type": "jsonpath",
                      "value": "$.config.adobe_client_secret"
                    },
                    "client_id": {
                      "type": "jsonpath",
                      "value": "$.config.adobe_client_id"
                    },
                    "refresh_token": {
                      "type": "jsonpath",
                      "value": "$.config.adobe_refresh_token"
                    },
                    "grant_type": {
                      "type": "string",
                      "value": "authorization_code"
                    },
                    "redirect_uri": {
                      "type": "string",
                      "value": "https://example.com"
                    },
                    "code": {
                      "type": "jsonpath",
                      "value": "$.config.adobe_code"
                    }
                  }
                }
              }
            }
          }
        },
        "math-helpers-1": {
          "title": "Add count",
          "connector": {
            "name": "math-helpers",
            "version": "2.0"
          },
          "operation": "add",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "first_value": {
              "type": "jsonpath",
              "value": "$.steps.storage-5.value"
            },
            "second_value": {
              "value": 1,
              "type": "integer"
            }
          }
        },
        "boolean-condition-6": {
          "title": "Netsuite agreement found?",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-2.response.body.count"
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "!=="
                    },
                    "value2": {
                      "type": "number",
                      "value": 0
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "storage-1": {
          "title": "Get lock",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "get",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Workflow"
            },
            "default_value": {
              "type": "boolean",
              "value": false
            },
            "key": {
              "type": "string",
              "value": "lockFlow"
            }
          }
        },
        "storage-5": {
          "title": "Get count",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "get",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Current Run"
            },
            "key": {
              "type": "string",
              "value": "countLoop"
            },
            "default_value": {
              "type": "number",
              "value": 0
            }
          }
        },
        "http-client-3": {
          "title": "Get quote url link",
          "connector": {
            "name": "http-client",
            "version": "5.6"
          },
          "operation": "get_request",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "status_code": {
                    "type": "number"
                  },
                  "headers": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string"
                      },
                      "server": {
                        "type": "string"
                      },
                      "x-robots-tag": {
                        "type": "string"
                      },
                      "x-request-id": {
                        "type": "string"
                      },
                      "cache-control": {
                        "type": "string"
                      },
                      "pragma": {
                        "type": "string"
                      },
                      "expires": {
                        "type": "string"
                      },
                      "content-length": {
                        "type": "string"
                      },
                      "strict-transport-security": {
                        "type": "string"
                      },
                      "x-xss-protection": {
                        "type": "string"
                      },
                      "x-content-type-options": {
                        "type": "string"
                      },
                      "p3p": {
                        "type": "string"
                      },
                      "connection": {
                        "type": "string"
                      },
                      "content-type": {
                        "type": "string"
                      }
                    }
                  },
                  "body": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "error_handling": {},
          "properties": {
            "url": {
              "type": "string",
              "value": "https://api.na1.adobesign.com/api/rest/v6/agreements/{$.steps.http-client-2.response.body.agreementAssetsResults.agreementAssetsResultList[0].id}/combinedDocument/url"
            },
            "auth": {
              "type": "object",
              "value": {
                "none": {
                  "type": "null",
                  "value": null
                }
              }
            },
            "headers": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "Authorization"
                    },
                    "value": {
                      "type": "string",
                      "value": "Bearer {$.steps.http-client-1.response.body.access_token}"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "x-ownership-scope"
                    },
                    "value": {
                      "type": "string",
                      "value": "SHARED_AND_OWNED"
                    }
                  }
                }
              ]
            },
            "queries": {
              "type": "array",
              "value": []
            },
            "follow_redirect": {
              "type": "boolean",
              "value": false
            },
            "follow_keep_method": {
              "type": "boolean",
              "value": false
            },
            "reject_unauthorized": {
              "type": "boolean",
              "value": true
            },
            "follow_authorization_header": {
              "type": "boolean",
              "value": false
            },
            "parse_response": {
              "type": "string",
              "value": "true"
            },
            "status_code": {
              "type": "object",
              "value": {
                "range": {
                  "type": "object",
                  "value": {
                    "from": {
                      "type": "integer",
                      "value": 200
                    },
                    "to": {
                      "type": "integer",
                      "value": 299
                    }
                  }
                }
              }
            },
            "case_sensitive_headers": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "boolean-condition-5": {
          "title": "Netsuite AgreementId informed?",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.trigger.data.netsuiteAgreementId",
                      "fallback": {
                        "value": null,
                        "type": "null"
                      }
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "!=="
                    },
                    "value2": {
                      "type": "null",
                      "value": null
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "boolean-condition-4": {
          "title": "Is flow locked?",
          "description": "After 3 minutes the flow is released, something unexpected happened",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.storage-1.value"
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "==="
                    },
                    "value2": {
                      "type": "boolean",
                      "value": true
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "comparison_type": {
                      "type": "string",
                      "value": "<="
                    },
                    "is_case_sensitive": {
                      "type": "boolean",
                      "value": false
                    },
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.storage-5.value"
                    },
                    "value2": {
                      "type": "number",
                      "value": 90
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "loop-1": {
          "title": "Loop forever",
          "description": "We can't the token if a token is being used, this will ensure we have only one execution at a time",
          "connector": {
            "name": "loop",
            "version": "1.3"
          },
          "operation": "loop_forever",
          "output_schema": {
            "type": "object",
            "$schema": "http://json-schema.org/draft-03/schema",
            "id": "http://jsonschema.net",
            "properties": {
              "index": {
                "type": "number",
                "id": "http://jsonschema.net/index"
              }
            }
          },
          "error_handling": {},
          "properties": {}
        },
        "storage-4": {
          "title": "Set lock to false",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "set",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Workflow"
            },
            "key": {
              "type": "string",
              "value": "lockFlow"
            },
            "value": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "callable-workflow-response-5": {
          "title": "Callable response",
          "connector": {
            "name": "callable-workflow-response",
            "version": "1.0"
          },
          "operation": "response",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "response": {
              "value": {
                "success": {
                  "value": false,
                  "type": "boolean"
                },
                "file": {
                  "type": "object",
                  "value": {}
                }
              },
              "type": "object"
            }
          }
        },
        "callable-workflow-response-2": {
          "title": "Callable response",
          "connector": {
            "name": "callable-workflow-response",
            "version": "1.0"
          },
          "operation": "response",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "response": {
              "value": {
                "success": {
                  "value": false,
                  "type": "boolean"
                },
                "file": {
                  "type": "object",
                  "value": {}
                }
              },
              "type": "object"
            }
          }
        },
        "netsuite-1": {
          "title": "Get external agreement id",
          "description": "Not getting draft because draft agreements are not in adobe yet",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "raw_http_request",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "status_code": {
                    "type": "number"
                  },
                  "headers": {
                    "type": "object",
                    "properties": {
                      "content-type": {
                        "type": "string"
                      },
                      "content-length": {
                        "type": "string"
                      },
                      "x-n-operationid": {
                        "type": "string"
                      },
                      "ns_rtimer_composite": {
                        "type": "string"
                      },
                      "strict-transport-security": {
                        "type": "string"
                      },
                      "pragma": {
                        "type": "string"
                      },
                      "cache-control": {
                        "type": "string"
                      },
                      "expires": {
                        "type": "string"
                      },
                      "x-netsuite-jobid": {
                        "type": "string"
                      },
                      "preference-applied": {
                        "type": "string"
                      },
                      "p3p": {
                        "type": "string"
                      },
                      "vary": {
                        "type": "string"
                      },
                      "date": {
                        "type": "string"
                      },
                      "connection": {
                        "type": "string"
                      },
                      "akamai-grn": {
                        "type": "string"
                      }
                    }
                  },
                  "body": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rel": {
                              "type": "string"
                            },
                            "href": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "count": {
                        "type": "number"
                      },
                      "hasMore": {
                        "type": "boolean"
                      },
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "type": "array",
                              "items": {}
                            },
                            "custrecord_echosign_external_id": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "offset": {
                        "type": "number"
                      },
                      "totalResults": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          },
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "method": {
              "type": "string",
              "value": "POST"
            },
            "include_raw_body": {
              "type": "boolean",
              "value": false
            },
            "parse_response": {
              "type": "string",
              "value": "true"
            },
            "url": {
              "type": "object",
              "value": {
                "endpoint": {
                  "type": "string",
                  "value": "/services/rest/query/v1/suiteql"
                }
              }
            },
            "headers": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "prefer"
                    },
                    "value": {
                      "type": "string",
                      "value": "transient"
                    }
                  }
                }
              ]
            },
            "body": {
              "type": "object",
              "value": {
                "raw": {
                  "type": "object",
                  "value": {
                    "q": {
                      "type": "string",
                      "value": "SELECT a.custrecord_echosign_external_id FROM customrecord_echosign_agreement a\nINNER JOIN customlist_echosign_status_types s on s.id = a.custrecord_echosign_status\nWHERE s.name != 'Draft'  AND a.custrecord_agreement_type = 1 AND custrecord_echosign_parent_record = {$.steps.trigger.data.netsuiteQuoteId}"
                    }
                  }
                }
              }
            }
          }
        },
        "callable-workflow-response-4": {
          "title": "Callable response",
          "connector": {
            "name": "callable-workflow-response",
            "version": "1.0"
          },
          "operation": "response",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "response": {
              "value": {
                "success": {
                  "value": false,
                  "type": "boolean"
                },
                "file": {
                  "type": "object",
                  "value": {}
                }
              },
              "type": "object"
            }
          }
        },
        "break-loop-1": {
          "title": "Break Loop",
          "connector": {
            "name": "break-loop",
            "version": "1.1"
          },
          "operation": "break",
          "output_schema": {},
          "error_handling": {},
          "properties": {}
        },
        "storage-6": {
          "title": "Set count",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "set",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Current Run"
            },
            "key": {
              "type": "string",
              "value": "countLoop"
            },
            "value": {
              "type": "jsonpath",
              "value": "$.steps.math-helpers-1.result"
            }
          }
        },
        "http-client-2": {
          "title": "Search adobe agreement",
          "connector": {
            "name": "http-client",
            "version": "5.6"
          },
          "operation": "post_request",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "status_code": {
                    "type": "number"
                  },
                  "headers": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string"
                      },
                      "server": {
                        "type": "string"
                      },
                      "x-robots-tag": {
                        "type": "string"
                      },
                      "vary": {
                        "type": "string"
                      },
                      "x-request-id": {
                        "type": "string"
                      },
                      "x-envoy-upstream-service-time": {
                        "type": "string"
                      },
                      "cache-control": {
                        "type": "string"
                      },
                      "pragma": {
                        "type": "string"
                      },
                      "expires": {
                        "type": "string"
                      },
                      "content-length": {
                        "type": "string"
                      },
                      "strict-transport-security": {
                        "type": "string"
                      },
                      "x-xss-protection": {
                        "type": "string"
                      },
                      "x-content-type-options": {
                        "type": "string"
                      },
                      "p3p": {
                        "type": "string"
                      },
                      "connection": {
                        "type": "string"
                      },
                      "content-type": {
                        "type": "string"
                      }
                    }
                  },
                  "body": {
                    "type": "object",
                    "properties": {
                      "totalHits": {
                        "type": "number"
                      },
                      "agreementAssetsResults": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "number"
                              },
                              "message": {
                                "type": "null"
                              },
                              "warnings": {
                                "type": "null"
                              }
                            }
                          },
                          "totalHits": {
                            "type": "number"
                          },
                          "searchPageInfo": {
                            "type": "object",
                            "properties": {
                              "nextIndex": {
                                "type": "null"
                              }
                            }
                          },
                          "agreementAssetsResultList": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "role": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "hidden": {
                                  "type": "null"
                                },
                                "groupId": {
                                  "type": "string"
                                },
                                "externalId": {
                                  "type": "string"
                                },
                                "subTypes": {
                                  "type": "null"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "userId": {
                                  "type": "string"
                                },
                                "parentId": {
                                  "type": "null"
                                },
                                "participantList": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "role": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "fullName": {
                                        "type": "string"
                                      },
                                      "participantSetNames": {
                                        "type": "null"
                                      },
                                      "company": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      },
                                      "email": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "role",
                                      "fullName",
                                      "participantSetNames",
                                      "company",
                                      "email"
                                    ]
                                  }
                                },
                                "createdDate": {
                                  "type": "string"
                                },
                                "modifiedDate": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "id": {
                                  "type": "string"
                                },
                                "workflowId": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string"
                                },
                                "expirationDate": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "error_handling": {},
          "properties": {
            "follow_redirect": {
              "type": "boolean",
              "value": false
            },
            "follow_keep_method": {
              "type": "boolean",
              "value": false
            },
            "reject_unauthorized": {
              "type": "boolean",
              "value": true
            },
            "follow_authorization_header": {
              "type": "boolean",
              "value": false
            },
            "parse_response": {
              "type": "string",
              "value": "true"
            },
            "status_code": {
              "type": "object",
              "value": {
                "range": {
                  "type": "object",
                  "value": {
                    "from": {
                      "type": "integer",
                      "value": 200
                    },
                    "to": {
                      "type": "integer",
                      "value": 299
                    }
                  }
                }
              }
            },
            "case_sensitive_headers": {
              "type": "boolean",
              "value": false
            },
            "url": {
              "type": "string",
              "value": "https://api.na1.adobesign.com/api/rest/v6/search"
            },
            "headers": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "Authorization"
                    },
                    "value": {
                      "type": "string",
                      "value": "Bearer {$.steps.http-client-1.response.body.access_token}"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "x-ownership-scope"
                    },
                    "value": {
                      "type": "string",
                      "value": "SHARED_AND_OWNED"
                    }
                  }
                }
              ]
            },
            "queries": {
              "type": "array",
              "value": []
            },
            "body": {
              "type": "object",
              "value": {
                "raw": {
                  "type": "object",
                  "value": {
                    "scope": {
                      "type": "array",
                      "value": [
                        {
                          "type": "string",
                          "value": "AGREEMENT_ASSETS"
                        }
                      ]
                    },
                    "agreementAssetsCriteria": {
                      "type": "object",
                      "value": {
                        "externalId": {
                          "type": "array",
                          "value": [
                            {
                              "type": "jsonpath",
                              "value": "$.steps.netsuite-1.response.body.items[0].custrecord_echosign_external_id",
                              "fallback": {
                                "type": "jsonpath",
                                "value": "$.steps.netsuite-2.response.body.items[0].custrecord_echosign_external_id"
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "delay-1": {
          "title": "wait 2 seconds",
          "connector": {
            "name": "delay",
            "version": "1.0"
          },
          "operation": "delay",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "time_unit": {
              "type": "string",
              "value": "seconds"
            },
            "delay_value": {
              "type": "integer",
              "value": 2
            }
          }
        },
        "boolean-condition-3": {
          "title": "Adobe agreement found?",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.http-client-2.response.body.totalHits"
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "!=="
                    },
                    "value2": {
                      "type": "number",
                      "value": 0
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "callable-workflow-response-3": {
          "title": "Callable response",
          "connector": {
            "name": "callable-workflow-response",
            "version": "1.0"
          },
          "operation": "response",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "response": {
              "value": {
                "success": {
                  "value": false,
                  "type": "boolean"
                },
                "file": {
                  "type": "object",
                  "value": {}
                }
              },
              "type": "object"
            }
          }
        },
        "file-helpers-1": {
          "title": "Download file",
          "connector": {
            "name": "file-helpers",
            "version": "2.5"
          },
          "operation": "create_file",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "url": {
              "type": "jsonpath",
              "value": "$.steps.http-client-3.response.body.url"
            },
            "name": {
              "type": "jsonpath",
              "value": "$.steps.script-1.result"
            }
          }
        },
        "trigger": {
          "title": "Callable Trigger",
          "connector": {
            "name": "callable-trigger",
            "version": "2.0"
          },
          "operation": "trigger_and_respond",
          "output_schema": {},
          "error_handling": {},
          "properties": {}
        }
      },
      "dependencies": [
        {
          "id": "5b94881f-4352-4ac4-8ee9-ffe85036bfca",
          "name": "Error Notification"
        }
      ]
    }
  ],
  "projects": []
}