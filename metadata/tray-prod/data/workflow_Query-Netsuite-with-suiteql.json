 {
  "tray_export_version": 4,
  "export_type": "workflow",
  "workflows": [
    {
      "id": "f73d19b7-349a-494c-af38-4a3bda0ea8d4",
      "created": "2024-01-03T15:03:04.677321Z",
      "workspace_id": "d3800da2-85c2-4b09-83cb-f805e217d38a",
      "project_id": "83b76e19-b679-48d2-a761-747243fc6c82",
      "creator": "f21f100c-9e62-42e2-a744-061c18de134c",
      "version": {
        "id": "fcd4ff43-c878-4942-a6a4-bf3314a811d3",
        "created": "2024-01-03T15:03:17.603752Z"
      },
      "title": "Query Netsuite with suiteql",
      "description": "This flow queries netsuite and return all results.\nSuiteql rest api returns only 1000 records. This flow will call the api until gets all the results.\nThe rest api can only be called 1000 times for a query, so the maximum records returned is 100,000 records.",
      "enabled": true,
      "tags": [],
      "settings": {
        "config": {},
        "alerting_workflow_id": "5b94881f-4352-4ac4-8ee9-ffe85036bfca",
        "input_schema": {
          "type": "object",
          "properties": {
            "suiteql": {
              "title": "Suiteql",
              "description": "Suiteql that will be processed. Use order by in the query because the result can be paged if it's more than 1000 records.",
              "type": "string",
              "format": "text"
            }
          },
          "additionalProperties": false,
          "required": [],
          "advanced": []
        },
        "output_schema": {
          "type": "object",
          "properties": {
            "result": {
              "title": "result",
              "type": "array",
              "items": {
                "title": "Item",
                "type": "object",
                "properties": {
                  "new_property": {
                    "type": "string",
                    "title": "New property"
                  }
                },
                "additionalProperties": false,
                "required": [],
                "advanced": []
              },
              "additionalItems": true
            }
          },
          "additionalProperties": false,
          "required": [],
          "advanced": []
        }
      },
      "steps_structure": [
        {
          "name": "trigger",
          "type": "normal",
          "content": {}
        },
        {
          "name": "loop-1",
          "type": "loop",
          "content": {
            "_loop": [
              {
                "name": "storage-1",
                "type": "normal",
                "content": {}
              },
              {
                "name": "netsuite-1",
                "type": "normal",
                "content": {}
              },
              {
                "name": "storage-2",
                "type": "normal",
                "content": {}
              },
              {
                "name": "boolean-condition-1",
                "type": "branch",
                "content": {
                  "true": [
                    {
                      "name": "math-helpers-1",
                      "type": "normal",
                      "content": {}
                    },
                    {
                      "name": "storage-3",
                      "type": "normal",
                      "content": {}
                    }
                  ],
                  "false": [
                    {
                      "name": "break-loop-1",
                      "type": "break",
                      "content": {},
                      "target": "loop-1"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "storage-4",
          "type": "normal",
          "content": {}
        },
        {
          "name": "callable-workflow-response-1",
          "type": "normal",
          "content": {}
        }
      ],
      "steps": {
        "storage-2": {
          "title": "Store result",
          "description": "Adds the result to the result array",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "append_to_list",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Current Run"
            },
            "key": {
              "type": "string",
              "value": "result"
            },
            "value": {
              "type": "jsonpath",
              "value": "$.steps.netsuite-1.response.body.items"
            },
            "create_if_missing": {
              "value": true,
              "type": "boolean"
            }
          }
        },
        "callable-workflow-response-1": {
          "title": "Callable response",
          "connector": {
            "name": "callable-workflow-response",
            "version": "1.0"
          },
          "operation": "response",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "response": {
              "value": {
                "result": {
                  "type": "jsonpath",
                  "value": "$.steps.storage-4.value"
                }
              },
              "type": "object"
            }
          }
        },
        "storage-3": {
          "title": "Set offset",
          "description": "Set the offset for next query",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "set",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Current Run"
            },
            "key": {
              "type": "string",
              "value": "offset"
            },
            "value": {
              "type": "jsonpath",
              "value": "$.steps.math-helpers-1.result"
            }
          }
        },
        "boolean-condition-1": {
          "title": "Has more records?",
          "description": "Check if suiteql has more records to return",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-1.response.body.hasMore"
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "==="
                    },
                    "value2": {
                      "type": "boolean",
                      "value": true
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "math-helpers-1": {
          "title": "Calc offset",
          "description": "Adds the rows returned to the current offset to get the new offset",
          "connector": {
            "name": "math-helpers",
            "version": "2.0"
          },
          "operation": "add",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "first_value": {
              "type": "jsonpath",
              "value": "$.steps.storage-1.value"
            },
            "second_value": {
              "type": "jsonpath",
              "value": "$.steps.netsuite-1.response.body.count"
            }
          }
        },
        "storage-1": {
          "title": "Get offset",
          "description": "Gets the offset for next query",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "get",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Current Run"
            },
            "key": {
              "type": "string",
              "value": "offset"
            },
            "default_value": {
              "type": "number",
              "value": 0
            }
          }
        },
        "netsuite-1": {
          "title": "Execute suiteql",
          "description": "Execute the suiteql. Netsuite returns max of 1000 records.",
          "connector": {
            "name": "netsuite",
            "version": "2.5"
          },
          "operation": "raw_http_request",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "status_code": {
                    "type": "number"
                  },
                  "headers": {
                    "type": "object",
                    "properties": {
                      "x-n-operationid": {
                        "type": "string"
                      },
                      "ns_rtimer_composite": {
                        "type": "string"
                      },
                      "strict-transport-security": {
                        "type": "string"
                      },
                      "pragma": {
                        "type": "string"
                      },
                      "cache-control": {
                        "type": "string"
                      },
                      "expires": {
                        "type": "string"
                      },
                      "x-netsuite-jobid": {
                        "type": "string"
                      },
                      "preference-applied": {
                        "type": "string"
                      },
                      "content-type": {
                        "type": "string"
                      },
                      "content-length": {
                        "type": "string"
                      },
                      "p3p": {
                        "type": "string"
                      },
                      "vary": {
                        "type": "string"
                      },
                      "date": {
                        "type": "string"
                      },
                      "connection": {
                        "type": "string"
                      },
                      "set-cookie": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "akamai-grn": {
                        "type": "string"
                      }
                    }
                  },
                  "body": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rel": {
                              "type": "string"
                            },
                            "href": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "count": {
                        "type": "number"
                      },
                      "hasMore": {
                        "type": "boolean"
                      },
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "type": "array",
                              "items": {}
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "links",
                            "id"
                          ]
                        }
                      },
                      "offset": {
                        "type": "number"
                      },
                      "totalResults": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          },
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/artisan/icons/5490dd45-59c7-41d1-8053-6b8deeb26d36.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "method": {
              "type": "string",
              "value": "POST"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "body": {
              "type": "object",
              "value": {
                "raw": {
                  "type": "jsonpath",
                  "value": "$.steps.trigger.data.suiteql"
                }
              }
            },
            "headers": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "prefer"
                    },
                    "value": {
                      "type": "string",
                      "value": "transient"
                    }
                  }
                }
              ]
            },
            "parse_response": {
              "type": "string",
              "value": "true"
            },
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "url": {
              "type": "object",
              "value": {
                "endpoint": {
                  "type": "string",
                  "value": "/services/rest/query/v1/suiteql?offset={$.steps.storage-1.value}"
                }
              }
            },
            "include_raw_body": {
              "type": "boolean",
              "value": false
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            }
          }
        },
        "break-loop-1": {
          "title": "Break Loop",
          "description": "Break loop if doesn't have more records to get",
          "connector": {
            "name": "break-loop",
            "version": "1.1"
          },
          "operation": "break",
          "output_schema": {},
          "error_handling": {},
          "properties": {}
        },
        "trigger": {
          "title": "Callable Trigger",
          "connector": {
            "name": "callable-trigger",
            "version": "2.0"
          },
          "operation": "trigger_and_respond",
          "output_schema": {},
          "error_handling": {},
          "properties": {}
        },
        "loop-1": {
          "title": "Loop Forever",
          "description": "Loop forever until has no more subscriptions to get",
          "connector": {
            "name": "loop",
            "version": "1.3"
          },
          "operation": "loop_forever",
          "output_schema": {
            "type": "object",
            "$schema": "http://json-schema.org/draft-03/schema",
            "id": "http://jsonschema.net",
            "properties": {
              "index": {
                "type": "number",
                "id": "http://jsonschema.net/index"
              }
            }
          },
          "error_handling": {},
          "properties": {}
        },
        "storage-4": {
          "title": "Get result",
          "description": "Get the result array will all results",
          "connector": {
            "name": "storage",
            "version": "1.4"
          },
          "operation": "get",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "scope": {
              "type": "string",
              "value": "Current Run"
            },
            "default_value": {
              "type": "array",
              "value": []
            },
            "key": {
              "type": "string",
              "value": "result"
            }
          }
        }
      },
      "dependencies": [
        {
          "id": "5b94881f-4352-4ac4-8ee9-ffe85036bfca",
          "name": "Error Notification"
        }
      ]
    }
  ],
  "projects": []
}