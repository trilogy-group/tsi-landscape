 {
  "tray_export_version": 4,
  "export_type": "workflow",
  "workflows": [
    {
      "id": "744673a7-2667-418e-8262-4e5da987c724",
      "created": "2022-10-10T15:39:53.988720Z",
      "workspace_id": "d3800da2-85c2-4b09-83cb-f805e217d38a",
      "group": "5c6512e1-7542-4677-8d88-c9601462b83e",
      "creator": "f21f100c-9e62-42e2-a744-061c18de134c",
      "version": {
        "id": "4d7ddfc7-9486-4830-ba75-760475c60c16",
        "created": "2023-03-17T15:26:14.844176Z"
      },
      "title": "Subflow add subsidiary to plan if needed",
      "description": "If the subsidiary is not part of the subsidiaries for the plan, it will add the subsidiary to the plan items and to the plan.",
      "enabled": true,
      "tags": [],
      "settings": {
        "config": {
          "restlet": "script=customscript_si_main_main_restlet&deploy=customdeploy_si_main_main"
        },
        "alerting_workflow_id": "5b94881f-4352-4ac4-8ee9-ffe85036bfca",
        "input_schema": {
          "type": "object",
          "properties": {
            "customerSubsidiaryId": {
              "title": "Customer Primary Subsidiary Id",
              "type": "string"
            },
            "subscriptionPlan": {
              "title": "Subscription Plan",
              "type": "object",
              "properties": {
                "new_property": {
                  "type": "string",
                  "title": "New property"
                }
              },
              "additionalProperties": false,
              "required": [],
              "advanced": []
            }
          },
          "additionalProperties": false,
          "required": [
            "subscriptionPlan",
            "customerSubsidiaryId"
          ],
          "advanced": []
        },
        "output_schema": {
          "type": "object",
          "properties": {
            "success": {
              "title": "Success",
              "type": "boolean",
              "default": false
            },
            "addedSubsidiary": {
              "title": "Added Subsidiary?",
              "type": "boolean",
              "default": false
            }
          },
          "additionalProperties": false,
          "required": [],
          "advanced": []
        }
      },
      "steps_structure": [
        {
          "name": "trigger",
          "type": "normal",
          "content": {}
        },
        {
          "name": "text-helpers-1",
          "type": "normal",
          "content": {}
        },
        {
          "name": "script-1",
          "type": "normal",
          "content": {}
        },
        {
          "name": "call-workflow-1",
          "type": "normal",
          "content": {}
        },
        {
          "name": "boolean-condition-1",
          "type": "branch",
          "content": {
            "true": [
              {
                "name": "callable-workflow-response-1",
                "type": "normal",
                "content": {}
              }
            ],
            "false": []
          }
        },
        {
          "name": "netsuite-1",
          "type": "normal",
          "content": {}
        },
        {
          "name": "boolean-condition-2",
          "type": "branch",
          "content": {
            "true": [
              {
                "name": "terminate-1",
                "type": "normal",
                "content": {}
              }
            ],
            "false": []
          }
        },
        {
          "name": "script-2",
          "type": "normal",
          "content": {}
        },
        {
          "name": "script-3",
          "type": "normal",
          "content": {}
        },
        {
          "name": "netsuite-3",
          "type": "normal",
          "content": {}
        },
        {
          "name": "script-4",
          "type": "normal",
          "content": {}
        },
        {
          "name": "loop-1",
          "type": "loop",
          "content": {
            "_loop": [
              {
                "name": "boolean-condition-3",
                "type": "branch",
                "content": {
                  "true": [],
                  "false": [
                    {
                      "name": "call-workflow-2",
                      "type": "normal",
                      "content": {}
                    },
                    {
                      "name": "boolean-condition-4",
                      "type": "branch",
                      "content": {
                        "true": [
                          {
                            "name": "break-loop-2",
                            "type": "break",
                            "content": {},
                            "target": "loop-1"
                          }
                        ],
                        "false": []
                      }
                    }
                  ]
                }
              },
              {
                "name": "script-5",
                "type": "normal",
                "content": {}
              },
              {
                "name": "loop-2",
                "type": "loop",
                "content": {
                  "_loop": [
                    {
                      "name": "netsuite-4",
                      "type": "normal",
                      "content": {}
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "name": "script-6",
          "type": "normal",
          "content": {}
        },
        {
          "name": "netsuite-5",
          "type": "normal",
          "content": {}
        },
        {
          "name": "callable-workflow-response-2",
          "type": "normal",
          "content": {}
        }
      ],
      "steps": {
        "boolean-condition-2": {
          "title": "is Inactive?",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-1.isInactive"
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "==="
                    },
                    "value2": {
                      "type": "boolean",
                      "value": true
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "text-helpers-1": {
          "title": "Convert customerSubsidiary",
          "connector": {
            "name": "text-helpers",
            "version": "3.0"
          },
          "operation": "change_type",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "result": {
                "type": "number"
              }
            }
          },
          "error_handling": {},
          "properties": {
            "value": {
              "type": "jsonpath",
              "value": "$.steps.trigger.data.customerSubsidiaryId"
            },
            "type2": {
              "type": "string",
              "value": "integer"
            }
          }
        },
        "call-workflow-1": {
          "title": "Search subsidiary",
          "connector": {
            "name": "call-workflow",
            "version": "2.0"
          },
          "operation": "fire_and_wait_for_response",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "workflow_id": {
              "type": "string",
              "value": "9b7b94e7-83e8-4ef4-a029-f8a121039c1f"
            },
            "trigger_input": {
              "type": "object",
              "value": {
                "subsidiaryIdToSearch": {
                  "type": "jsonpath",
                  "value": "$.steps.text-helpers-1.result"
                },
                "subsidiaryIds": {
                  "type": "jsonpath",
                  "value": "$.steps.script-1.result.idsArray"
                },
                "includeChildren": {
                  "type": "jsonpath",
                  "value": "$.steps.trigger.data.subscriptionPlan.includeChildren"
                }
              }
            }
          }
        },
        "boolean-condition-1": {
          "title": "Subsidiary found?",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.call-workflow-1.response.found"
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "==="
                    },
                    "value2": {
                      "type": "boolean",
                      "value": true
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "callable-workflow-response-2": {
          "title": "Callable response",
          "connector": {
            "name": "callable-workflow-response",
            "version": "1.0"
          },
          "operation": "response",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "response": {
              "value": {
                "success": {
                  "type": "boolean",
                  "value": true
                },
                "addedSubsidiary": {
                  "value": true,
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        },
        "netsuite-4": {
          "title": "Add subsidiary to Item",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "update_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "record_type": {
              "value": "noninventorysaleitem",
              "type": "string"
            },
            "record_id": {
              "type": "jsonpath",
              "value": "$.steps.loop-2.value"
            },
            "writable_record_fields": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "subsidiary"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.script-5.result"
                    }
                  }
                }
              ]
            }
          }
        },
        "loop-2": {
          "title": "Loop items",
          "connector": {
            "name": "loop",
            "version": "1.3"
          },
          "operation": "loop_array",
          "output_schema": {
            "type": "object",
            "$schema": "http://json-schema.org/draft-03/schema",
            "id": "http://jsonschema.net",
            "additionalProperties": false,
            "properties": {
              "value": {},
              "count": {
                "type": "number",
                "id": "http://jsonschema.net/total"
              },
              "index": {
                "type": "number",
                "id": "http://jsonschema.net/index"
              },
              "is_first": {
                "type": "boolean",
                "id": "http://jsonschema.net/is_first"
              },
              "is_last": {
                "type": "boolean",
                "id": "http://jsonschema.net/is_last"
              }
            }
          },
          "error_handling": {},
          "properties": {
            "array": {
              "type": "jsonpath",
              "value": "$.steps.loop-1.value.itemIds"
            }
          }
        },
        "script-6": {
          "title": "Get payload for plan",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "newSubsidiaryId"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.text-helpers-1.result"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "currentSubsidiaryIds"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.script-1.result.idsArray"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "exports.step = function(input) {\n  const items = input.currentSubsidiaryIds.map(i => {\n    return {\n      id: i\n    }\n  });\n  items.push({\n    id: input.newSubsidiaryId\n  });\n  return {\n    items: items\n  };\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "script-1": {
          "title": "Get subsidiary ids array",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "subsidiaries"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.trigger.data.subscriptionPlan.subsidiary"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "exports.step = function(input) {\n  const idsArray = input.subsidiaries.items.map(i => parseInt(i.id)).sort();\n  const subsidiaries = idsArray.join(',');\n  const includeChildren = input.includeChildren ? 'T' : 'F';\n\treturn {\n    idsArray: idsArray,\n    planKey: `${subsidiaries} - ${includeChildren}`\n\t}\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "callable-workflow-response-1": {
          "title": "Callable response",
          "connector": {
            "name": "callable-workflow-response",
            "version": "1.0"
          },
          "operation": "response",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "response": {
              "value": {
                "success": {
                  "type": "boolean",
                  "value": true
                },
                "addedSubsidiary": {
                  "value": false,
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        },
        "script-3": {
          "title": "SuiteQL get items info",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "itemIds"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.script-2.result"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "exports.step = function (input) {\n  return {\n    q:\n      `SELECT id, subsidiary, includechildren FROM item where id in (${input.itemIds.join(',')})`\n  };\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "netsuite-5": {
          "title": "Add subsidiary to Plan",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "update_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "record_type": {
              "value": "subscriptionplan",
              "type": "string"
            },
            "record_id": {
              "type": "jsonpath",
              "value": "$.steps.trigger.data.subscriptionPlan.id"
            },
            "writable_record_fields": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "subsidiary"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.script-6.result"
                    }
                  }
                }
              ]
            }
          }
        },
        "call-workflow-2": {
          "title": "Search subsidiary",
          "connector": {
            "name": "call-workflow",
            "version": "2.0"
          },
          "operation": "fire_and_wait_for_response",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "workflow_id": {
              "type": "string",
              "value": "9b7b94e7-83e8-4ef4-a029-f8a121039c1f"
            },
            "trigger_input": {
              "type": "object",
              "value": {
                "subsidiaryIdToSearch": {
                  "type": "jsonpath",
                  "value": "$.steps.text-helpers-1.result"
                },
                "subsidiaryIds": {
                  "type": "jsonpath",
                  "value": "$.steps.loop-1.value.subsidiaryIds"
                },
                "includeChildren": {
                  "type": "jsonpath",
                  "value": "$.steps.loop-1.value.includeChildren"
                }
              }
            }
          }
        },
        "boolean-condition-4": {
          "title": "Subsidiary found?",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.call-workflow-2.response.found"
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "==="
                    },
                    "value2": {
                      "type": "boolean",
                      "value": true
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "loop-1": {
          "title": "Loop subsidiary map",
          "connector": {
            "name": "loop",
            "version": "1.3"
          },
          "operation": "loop_array",
          "output_schema": {
            "type": "object",
            "$schema": "http://json-schema.org/draft-03/schema",
            "id": "http://jsonschema.net",
            "additionalProperties": false,
            "properties": {
              "value": {
                "type": [
                  "string",
                  "number",
                  "object",
                  "array",
                  "boolean",
                  "null"
                ],
                "description": "The script result returned from the function",
                "title": "Result"
              },
              "count": {
                "type": "number",
                "id": "http://jsonschema.net/total"
              },
              "index": {
                "type": "number",
                "id": "http://jsonschema.net/index"
              },
              "is_first": {
                "type": "boolean",
                "id": "http://jsonschema.net/is_first"
              },
              "is_last": {
                "type": "boolean",
                "id": "http://jsonschema.net/is_last"
              }
            }
          },
          "error_handling": {},
          "properties": {
            "array": {
              "type": "jsonpath",
              "value": "$.steps.script-4.result",
              "fallback": {
                "type": "array",
                "value": []
              }
            }
          }
        },
        "terminate-1": {
          "title": "Fail",
          "connector": {
            "name": "terminate",
            "version": "1.1"
          },
          "operation": "fail_run",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "message": {
              "type": "string",
              "value": "Subsidiary is inactive and can't be added to plan"
            }
          }
        },
        "script-4": {
          "title": "Get subsidiary map",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "items"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-3.response.body.items"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "exports.step = function(input) {\n  const subsidiaryMap = new Map();\n  for (const item of input.items) {\n    const subsidiaryIds = item.subsidiary.split(',').map(i => parseInt(i.trim())).sort();\n    const key = `${subsidiaryIds.join(',')} - ${item.includechildren}`;\n    if (subsidiaryMap.has(key)) {\n      const values = subsidiaryMap.get(key);\n      values.itemIds.push(item.id);\n    } else {\n      subsidiaryMap.set(key, {\n        key: key,\n        itemIds: [item.id],\n        subsidiaryIds: subsidiaryIds,\n        includeChildren: item.includechildren === 'T'\n      });\n    }\n  }\n  return Array.from(subsidiaryMap.values());\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "break-loop-2": {
          "title": "Continue loop",
          "connector": {
            "name": "break-loop",
            "version": "1.1"
          },
          "operation": "continue",
          "output_schema": {},
          "error_handling": {},
          "properties": {}
        },
        "netsuite-3": {
          "title": "Get items info",
          "description": "Run the SQL to get the subscription term",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "raw_http_request",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "method": {
              "type": "string",
              "value": "POST"
            },
            "url": {
              "type": "object",
              "value": {
                "endpoint": {
                  "type": "string",
                  "value": "/services/rest/query/v1/suiteql"
                }
              }
            },
            "headers": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "prefer"
                    },
                    "value": {
                      "type": "string",
                      "value": "transient"
                    }
                  }
                }
              ]
            },
            "body": {
              "type": "object",
              "value": {
                "raw": {
                  "type": "jsonpath",
                  "value": "$.steps.script-3.result"
                }
              }
            },
            "include_raw_body": {
              "type": "boolean",
              "value": false
            },
            "parse_response": {
              "type": "string",
              "value": "true"
            }
          }
        },
        "netsuite-1": {
          "title": "Get subsidiary",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "get_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "record_type": {
              "type": "string",
              "value": "subsidiary"
            },
            "record_id": {
              "type": "jsonpath",
              "value": "$.steps.trigger.data.customerSubsidiaryId"
            }
          }
        },
        "script-5": {
          "title": "Get payload for item",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "newSubsidiaryId"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.text-helpers-1.result"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "currentSubsidiaryIds"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.loop-1.value.subsidiaryIds"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "exports.step = function(input) {\n  const items = input.currentSubsidiaryIds.map(i => {\n    return {\n      id: i\n    }\n  });\n  items.push({\n    id: input.newSubsidiaryId\n  });\n  return {\n    items: items\n  };\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "script-2": {
          "title": "Get item ids",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "items"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.trigger.data.subscriptionPlan.member.items"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "exports.step = function(input) {\n\treturn input.items.map(i => i.item.id);\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "boolean-condition-3": {
          "title": "Same subsidiaries from plan?",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.loop-1.value.key"
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "==="
                    },
                    "value2": {
                      "type": "jsonpath",
                      "value": "$.steps.script-1.result.planKey"
                    },
                    "is_case_sensitive": {
                      "value": false,
                      "type": "boolean"
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "trigger": {
          "title": "Callable Trigger",
          "connector": {
            "name": "callable-trigger",
            "version": "2.0"
          },
          "operation": "trigger_and_respond",
          "output_schema": {},
          "error_handling": {},
          "properties": {}
        }
      },
      "dependencies": [
        {
          "id": "9b7b94e7-83e8-4ef4-a029-f8a121039c1f",
          "name": "Subflow search subsidiary"
        }
      ]
    }
  ],
  "projects": []
}