 {
  "tray_export_version": 4,
  "export_type": "workflow",
  "workflows": [
    {
      "id": "5bb0f390-1ea1-41a4-88b3-0f51dd34add4",
      "created": "2022-10-27T02:54:53.615655Z",
      "workspace_id": "d3800da2-85c2-4b09-83cb-f805e217d38a",
      "group": "7177aaa4-2f72-4e6e-8be2-4c7af11c415f",
      "creator": "f21f100c-9e62-42e2-a744-061c18de134c",
      "version": {
        "id": "69091ec2-2619-4c83-84d2-74abb646f985",
        "created": "2023-03-14T03:05:21.770089Z"
      },
      "title": "Subflow reopen subscription",
      "enabled": true,
      "tags": [],
      "settings": {
        "config": {},
        "alerting_workflow_id": "5b94881f-4352-4ac4-8ee9-ffe85036bfca",
        "input_schema": {
          "type": "object",
          "properties": {
            "subscription": {
              "title": "Subscription",
              "type": "object",
              "properties": {
                "new_property": {
                  "type": "string",
                  "title": "New property"
                }
              },
              "additionalProperties": false,
              "required": [],
              "advanced": []
            },
            "opportunity": {
              "title": "Opportunity",
              "type": "object",
              "properties": {
                "new_property": {
                  "type": "string",
                  "title": "New property"
                }
              },
              "additionalProperties": false,
              "required": [],
              "advanced": []
            }
          },
          "additionalProperties": false,
          "required": [
            "subscription",
            "opportunity"
          ],
          "advanced": []
        },
        "output_schema": {}
      },
      "steps_structure": [
        {
          "name": "trigger",
          "type": "normal",
          "content": {}
        },
        {
          "name": "script-1",
          "type": "normal",
          "content": {}
        },
        {
          "name": "netsuite-1",
          "type": "normal",
          "content": {}
        },
        {
          "name": "boolean-condition-1",
          "type": "branch",
          "content": {
            "true": [
              {
                "name": "netsuite-2",
                "type": "branch",
                "content": {
                  "error": [
                    {
                      "name": "script-4",
                      "type": "normal",
                      "content": {}
                    },
                    {
                      "name": "call-workflow-2",
                      "type": "normal",
                      "content": {}
                    },
                    {
                      "name": "callable-workflow-response-3",
                      "type": "normal",
                      "content": {}
                    }
                  ],
                  "success": []
                }
              },
              {
                "name": "netsuite-3",
                "type": "normal",
                "content": {}
              },
              {
                "name": "script-2",
                "type": "normal",
                "content": {}
              },
              {
                "name": "script-3",
                "type": "normal",
                "content": {}
              },
              {
                "name": "netsuite-4",
                "type": "normal",
                "content": {}
              },
              {
                "name": "callable-workflow-response-1",
                "type": "normal",
                "content": {}
              }
            ],
            "false": [
              {
                "name": "call-workflow-1",
                "type": "normal",
                "content": {}
              },
              {
                "name": "salesforce-1",
                "type": "normal",
                "content": {}
              },
              {
                "name": "callable-workflow-response-2",
                "type": "normal",
                "content": {}
              }
            ]
          }
        }
      ],
      "steps": {
        "script-1": {
          "title": "SuiteQL termination order",
          "description": "Form a SuiteQL to select the parent subscription since it is missing from the REST response",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "result": {
                "type": "object",
                "properties": {
                  "q": {
                    "type": "string"
                  }
                }
              },
              "console": {
                "type": "array",
                "items": {}
              }
            }
          },
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "subscriptionId"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.trigger.data.subscription.id"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "// Since the parent subscription field is not available,\n// we use suiteQL to get the parent subscription id\nexports.step = function (input) {\n  return {\n    q:\n      `SELECT tco.id FROM subscriptionchangeorder tco\n\t\t\t\tLEFT JOIN subscriptionchangeorder aco on aco.subscription = tco.subscription and aco.action = 'ACTIVATE' and aco.subscriptionchangeorderstatus = 'ACTIVE'\n\twhere tco.action = 'TERMINATE'\n\tAND tco.subscription = ${input.subscriptionId}\n\tAND tco.subscriptionchangeorderstatus = 'ACTIVE'\n\tAND aco.id is null`\n  };\n};\n"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "netsuite-2": {
          "title": "Void termination order",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "delete_record",
          "output_schema": {},
          "error_handling": {
            "strategy": "manual"
          },
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "record_type": {
              "type": "string",
              "value": "subscriptionchangeorder"
            },
            "record_id": {
              "type": "jsonpath",
              "value": "$.steps.netsuite-1.response.body.items[0].id"
            }
          }
        },
        "call-workflow-2": {
          "title": "Append error message",
          "connector": {
            "name": "call-workflow",
            "version": "2.0"
          },
          "operation": "fire_and_wait_for_response",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "workflow_id": {
              "type": "string",
              "value": "e96c1f66-536a-4e5c-8bd3-8a2375110837"
            },
            "trigger_input": {
              "type": "object",
              "value": {
                "message": {
                  "type": "string",
                  "value": "NS Renewal Subscription {$.steps.trigger.data.subscription.id} could not be un-terminated, you will have to process future quote and invoice requests manually.  NS error: {$.steps.script-4.result}"
                },
                "chatter_post": {
                  "type": "boolean",
                  "value": true
                },
                "objectType": {
                  "type": "string",
                  "value": "Opportunity"
                },
                "objectId": {
                  "type": "jsonpath",
                  "value": "$.steps.trigger.data.opportunity.Id"
                }
              }
            }
          }
        },
        "call-workflow-1": {
          "title": "Append error message",
          "connector": {
            "name": "call-workflow",
            "version": "2.0"
          },
          "operation": "fire_and_wait_for_response",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "workflow_id": {
              "type": "string",
              "value": "e96c1f66-536a-4e5c-8bd3-8a2375110837"
            },
            "trigger_input": {
              "type": "object",
              "value": {
                "message": {
                  "type": "string",
                  "value": "Renewal subscription {$.steps.trigger.data.subscription.id} was not changed when this opportunity was reopened. Please, process manually."
                },
                "chatter_post": {
                  "type": "boolean",
                  "value": true
                },
                "objectType": {
                  "type": "string",
                  "value": "Opportunity"
                },
                "objectId": {
                  "type": "jsonpath",
                  "value": "$.steps.trigger.data.opportunity.Id"
                }
              }
            }
          }
        },
        "boolean-condition-1": {
          "title": "Termination order found?",
          "connector": {
            "name": "boolean-condition",
            "version": "2.3"
          },
          "operation": "boolean_condition",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "conditions": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value1": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-1.response.body.count"
                    },
                    "comparison_type": {
                      "type": "string",
                      "value": "==="
                    },
                    "value2": {
                      "type": "number",
                      "value": 1
                    }
                  }
                }
              ]
            },
            "strictness": {
              "type": "string",
              "value": "All"
            }
          }
        },
        "script-4": {
          "title": "Get NS error",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "response"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.errors.netsuite-2.response",
                      "fallback": {
                        "type": "null",
                        "value": null
                      }
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "exports.step = function(input) {\n  let error = '';\n  try {\n    const response = JSON.parse(input.response.body);\n    error = response['o:errorDetails'][0].detail;\n  } catch {\n    // do nothing\n  }\n\treturn error;\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "callable-workflow-response-2": {
          "title": "Callable response",
          "connector": {
            "name": "callable-workflow-response",
            "version": "1.0"
          },
          "operation": "response",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "response": {
              "value": {
                "success": {
                  "value": false,
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        },
        "netsuite-4": {
          "title": "Update subscription to Draft",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "update_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "record_type": {
              "type": "string",
              "value": "subscription"
            },
            "record_id": {
              "type": "jsonpath",
              "value": "$.steps.trigger.data.subscription.id"
            },
            "writable_record_fields": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.script-2.result"
                    },
                    "key": {
                      "type": "string",
                      "value": "subscriptionLine"
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "custrecord_memo"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.script-3.result"
                    }
                  }
                }
              ]
            }
          }
        },
        "netsuite-3": {
          "title": "Get subscription",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "get_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "record_type": {
              "type": "string",
              "value": "subscription"
            },
            "record_id": {
              "type": "jsonpath",
              "value": "$.steps.trigger.data.subscription.id"
            },
            "expand_sub_resources": {
              "value": true,
              "type": "boolean"
            }
          }
        },
        "salesforce-1": {
          "title": "Set to process manually",
          "connector": {
            "name": "salesforce",
            "version": "8.7"
          },
          "operation": "update_record",
          "output_schema": {},
          "error_handling": {},
          "authentication": {
            "group": "2c440ec0-5ac6-4a09-aef3-d861faa8c602",
            "title": "SF-Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/a8ff6c9514c35c853b350382534fb624.png"
            },
            "scopes": [
              "refresh_token",
              "full"
            ],
            "service_name": "salesforce",
            "service_version": 1
          },
          "properties": {
            "object": {
              "type": "string",
              "value": "Opportunity"
            },
            "fields": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "Process_O2C_Manually__c"
                    },
                    "value": {
                      "type": "boolean",
                      "value": true
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "Process_O2C_Manually_Reason__c"
                    },
                    "value": {
                      "type": "string",
                      "value": "Subscription termination order couldn't be voided when the opportunity was reopened."
                    }
                  }
                }
              ]
            },
            "object_id": {
              "type": "jsonpath",
              "value": "$.steps.trigger.data.opportunity.Id"
            }
          }
        },
        "netsuite-1": {
          "title": "Get termination orders",
          "description": "Get parent subscription via SuiteQL",
          "connector": {
            "name": "netsuite",
            "version": "2.8"
          },
          "operation": "raw_http_request",
          "output_schema": {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
              "response": {
                "type": "object",
                "properties": {
                  "status_code": {
                    "type": "number"
                  },
                  "headers": {
                    "type": "object",
                    "properties": {
                      "x-n-operationid": {
                        "type": "string"
                      },
                      "ns_rtimer_composite": {
                        "type": "string"
                      },
                      "strict-transport-security": {
                        "type": "string"
                      },
                      "pragma": {
                        "type": "string"
                      },
                      "cache-control": {
                        "type": "string"
                      },
                      "expires": {
                        "type": "string"
                      },
                      "x-netsuite-jobid": {
                        "type": "string"
                      },
                      "preference-applied": {
                        "type": "string"
                      },
                      "content-type": {
                        "type": "string"
                      },
                      "content-length": {
                        "type": "string"
                      },
                      "p3p": {
                        "type": "string"
                      },
                      "vary": {
                        "type": "string"
                      },
                      "date": {
                        "type": "string"
                      },
                      "connection": {
                        "type": "string"
                      },
                      "set-cookie": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "akamai-grn": {
                        "type": "string"
                      }
                    }
                  },
                  "body": {
                    "type": "object",
                    "properties": {
                      "links": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rel": {
                              "type": "string"
                            },
                            "href": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "count": {
                        "type": "number"
                      },
                      "hasMore": {
                        "type": "boolean"
                      },
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "links": {
                              "type": "array",
                              "items": {}
                            },
                            "parentsubscription": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "offset": {
                        "type": "number"
                      },
                      "totalResults": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          },
          "error_handling": {},
          "authentication": {
            "group": "acf5ed7f-c1d0-49ae-a8d1-89dd2b001a92",
            "title": "NS Prod",
            "service_icon": {
              "icon_type": "url",
              "value": "//s3.amazonaws.com/images.tray.io/static/service/icons/eb27b52bd4378b8bc0288428d585968b.png"
            },
            "scopes": [],
            "service_name": "netsuite",
            "service_version": 4
          },
          "properties": {
            "account_id": {
              "type": "jsonpath",
              "value": "$.auth.account_id"
            },
            "consumer_key": {
              "type": "jsonpath",
              "value": "$.auth.consumer_key"
            },
            "consumer_secret": {
              "type": "jsonpath",
              "value": "$.auth.consumer_secret"
            },
            "token_id": {
              "type": "jsonpath",
              "value": "$.auth.token_id"
            },
            "token_secret": {
              "type": "jsonpath",
              "value": "$.auth.token_secret"
            },
            "method": {
              "type": "string",
              "value": "POST"
            },
            "include_raw_body": {
              "type": "boolean",
              "value": false
            },
            "parse_response": {
              "type": "string",
              "value": "true"
            },
            "headers": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "key": {
                      "type": "string",
                      "value": "prefer"
                    },
                    "value": {
                      "type": "string",
                      "value": "transient"
                    }
                  }
                }
              ]
            },
            "body": {
              "type": "object",
              "value": {
                "raw": {
                  "type": "jsonpath",
                  "value": "$.steps.script-1.result"
                }
              }
            },
            "url": {
              "type": "object",
              "value": {
                "endpoint": {
                  "type": "string",
                  "value": "/services/rest/query/v1/suiteql"
                }
              }
            }
          }
        },
        "callable-workflow-response-1": {
          "title": "Callable response",
          "connector": {
            "name": "callable-workflow-response",
            "version": "1.0"
          },
          "operation": "response",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "response": {
              "value": {
                "success": {
                  "value": true,
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        },
        "script-3": {
          "title": "Format memo",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "memo"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-3.custrecord_memo",
                      "fallback": {
                        "type": "null",
                        "value": null
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "opportunityId"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.trigger.data.opportunity.Id"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "exports.step = function(input) {\n\tconst today = localeDateToNetsuiteTimezone(new Date());\n  const todayString = `${(today.getMonth()+1).toString().padStart(2, '0')}/${today.getDate().toString().padStart(2, '0')}/${today.getFullYear().toString().substring(2,4)}`;\n  const message = `${todayString} SYSTEM: Void the termination order for this subscription because the Opportunity was reopen https://trilogy-sales.lightning.force.com/${input.opportunityId}`;\n  const memo = input.memo ? `${message}\\r\\n\\r\\n${input.memo}` : message;\n  return memo;\n};\n\nfunction localeDateToNetsuiteTimezone(date) {\n  const newDate = new Date(date.toLocaleString('en-US', { timeZone: 'America/Los_Angeles' }));\n  newDate.setMinutes(newDate.getMinutes() - newDate.getTimezoneOffset());\n  newDate.setHours(0, 0, 0, 0);\n  return newDate;\n}"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "script-2": {
          "title": "'Draft' Lines",
          "description": "Construct lines update object to move all the lines to PENDING_ACTIVATION.",
          "connector": {
            "name": "script",
            "version": "3.3"
          },
          "operation": "execute",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "variables": {
              "type": "array",
              "value": [
                {
                  "type": "object",
                  "value": {
                    "name": {
                      "type": "string",
                      "value": "priceIntervals"
                    },
                    "value": {
                      "type": "jsonpath",
                      "value": "$.steps.netsuite-3.priceInterval.items"
                    }
                  }
                }
              ]
            },
            "script": {
              "type": "string",
              "value": "// Construct object to move all the DRAFT lines to PENDING_ACTIVATION\nexports.step = function (input) {\n    return {\n        \"items\": input.priceIntervals.filter(f => f.status.id === 'PENDING_ACTIVATION').map(m => {\n            return {\n                \"linenumber\": m.lineNumber,\n                \"status\": {\n                    \"id\": \"DRAFT\"\n                }\n            }\n        })\n    };\n};"
            },
            "file_output": {
              "type": "boolean",
              "value": false
            }
          }
        },
        "callable-workflow-response-3": {
          "title": "Callable response",
          "connector": {
            "name": "callable-workflow-response",
            "version": "1.0"
          },
          "operation": "response",
          "output_schema": {},
          "error_handling": {},
          "properties": {
            "response": {
              "value": {
                "success": {
                  "value": false,
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        },
        "trigger": {
          "title": "Callable Trigger",
          "connector": {
            "name": "callable-trigger",
            "version": "2.0"
          },
          "operation": "trigger_and_respond",
          "output_schema": {},
          "error_handling": {},
          "properties": {}
        }
      },
      "dependencies": [
        {
          "id": "e96c1f66-536a-4e5c-8bd3-8a2375110837",
          "name": "Subflow Append Message to Description"
        }
      ]
    }
  ],
  "projects": []
}